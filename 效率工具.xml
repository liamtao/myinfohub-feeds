<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>MyInfoHub - 效率工具 Feed</title>
    <link>https://liamtao.github.io/myinfohub-feeds/</link>
    <description>聚合与'效率工具'相关的最新信息。</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 01 Jul 2025 07:54:11 +0000</lastBuildDate>
    <item>
      <title>非技术人员如何用AI工具（Cursor与Claude_Code）在3周内从零开始构建可盈利的营销应用</title>
      <link>https://www.youtube.com/watch?v=DxSDZwpgfRE</link>
      <description>&lt;p&gt;&lt;a href="item.source_link"&gt;Greg Isenberg&lt;/a&gt; | &lt;a href="https://www.youtube.com/watch?v=DxSDZwpgfRE"&gt;Cursor + Claude Code is INSANE (Vibe Marketing Tutorial)&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本文主要介绍了非技术人员如何在短短3周内，通过利用Cursor和Claude Code等AI工具，从零开始构建功能完备、能够获取大量流量的营销应用程序，特别是针对程序化SEO的网站页面。&lt;/p&gt;

&lt;h3&gt;重要概念&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cursor&lt;/strong&gt;: 一款集成开发环境 (IDE)，内置AI代理，能理解代码库、生成代码、进行研究并支持自然语言对话。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Claude Code&lt;/strong&gt;: 一款运行在Cursor终端内的AI工具，被认为比Cursor的内置代理更高效，因为它能更好地理解文件结构并逻辑性地规划任务，将终端转变为聊天界面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MCPs (Multi-Capability Providers)&lt;/strong&gt;: 在Cursor中使用的多功能提供商工具，例如Firecrawl用于网页抓取，Perplexity用于研究，Data for SEO用于关键词验证。它们允许通过自然语言执行复杂任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;程序化SEO/关键词策略&lt;/strong&gt;: 一种通过批量创建针对特定长尾关键词的网页来获取大量有机流量的策略，类似于Zapier的做法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PRD (Product Requirement Document)&lt;/strong&gt;: 产品需求文档，用于整合研究背景，为AI（特别是Claude Code）提供清晰的任务列表，从而获得更优质、更集中的输出结果。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;非技术人员能够在短时间内（例如3周）利用AI工具成为开发者并构建功能性应用。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;案例&lt;/strong&gt;: 讲者用Claude Code在30分钟内构建了一个功能齐全的关键词研究应用，并成功发布到GitHub上，而之前尝试使用N8N构建类似的工作流却花费了一小时并遭遇大量调试问题。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI工具（如Claude Code）在开发任务中往往比传统低代码/无代码平台（如N8N）甚至Cursor自带的AI代理更高效和成功。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逻辑&lt;/strong&gt;: Claude Code对代码库有更深入的理解，任务规划逻辑清晰，且产生的错误更少，从而大大减少了调试时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对比&lt;/strong&gt;: 试图用N8N构建关键词研究工作流失败后，同样的需求通过Claude Code在30分钟内构建出了一个完全可用的应用程序。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在AI驱动的开发中，“规划和研究”阶段（使用MCPs和创建PRD）至关重要，尽管常被忽视，但它能带来更好的最终输出。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逻辑&lt;/strong&gt;: 这一阶段为AI提供了明确的上下文和结构化路径，避免了结果的稀释，减少了来回沟通的需求。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;与传统学习成本或外包机构费用相比，使用先进AI模型进行开发的成本微不足道，且商业回报潜力巨大。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据&lt;/strong&gt;: 构建一个应用大约花费20美元。这与大学学费（数十万美元）或SEO机构费用（数千美元）相比极低。投资回报率（ROI）案例：花费20美元创建工具，获取100个电子邮件注册，其中一人购买200美元的年度会员，ROI达到10倍。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cursor结合Claude Code和MCPs，提供了一个“闭环环境”，能够极大地加速从洞察到行动的转化。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;案例&lt;/strong&gt;: 可以利用Firecrawl抓取网站内容，使用Perplexity寻找关键词，用Data for SEO验证并获取数据，然后通过Claude Code和Vercel构建并部署页面。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI辅助开发如同“结对编程”，初学者可以通过观察和与AI交互，学习到编码概念和项目结构。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;行动建议/操作指南&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;选择并设置核心工具&lt;/strong&gt;: 安装Cursor作为集成开发环境，并在其中安装Claude Code。Claude Code在终端中运行，但提供聊天式界面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;集成多功能提供商（MCPs）&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;通过向LLM（如Claude Code或ChatGPT）提问“如何在我的终端安装[工具名称]”来安装Firecrawl（用于网页抓取）、Perplexity（用于研究和关键词构思）和Data for SEO（用于关键词验证和度量）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;执行研究阶段&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;使用Firecrawl MCP抓取你的网站，创建一份全面的Markdown摘要文件（例如：&lt;code&gt;use the firecrawl mcp to scrape the vibemarketer.com and create a MD&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;使用Perplexity MCP查找相关的程序化关键词创意（例如：&lt;code&gt;use the perplexity mcp to find relevant programmatic keyword ideas for my business&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;使用Data for SEO MCP研究关键词并估算潜在搜索量（例如：&lt;code&gt;use the data for SEO MCP to research our keywords and give me an idea of the potential search volume&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;创建产品需求文档（PRD）&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;提示Cursor代理根据收集到的研究信息生成PRD，详细说明项目概述、目标、成功指标、用户意图和优先级关键词/工具（例如：&lt;code&gt;create a PRD that I can use to build my first programmatic page template based on this strategy&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;为Claude Code设定项目上下文&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;告知Claude Code你正在处理的项目文件夹（例如：&lt;code&gt;we have a new project to work on for the Vibe Marketer production website&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;引导Claude Code使用PRD&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;让Claude Code查找并读取你创建的PRD文件（例如：&lt;code&gt;find the programmatic SEO comparison PRD file in our environment. That is our project&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;启动构建过程&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;在Claude Code理解项目和PRD后，确认开始构建（例如，回应“integrate it into your existing production site”）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;部署应用&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;通过LLM提示安装Vercel（或Netlify）的命令行工具。&lt;/li&gt;
&lt;li&gt;使用Claude Code部署项目（例如：&lt;code&gt;deploy this to our Vercel project&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迭代和优化&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;检查部署后的页面或应用，并根据需要向Claude Code提出修改意见。&lt;/li&gt;
&lt;li&gt;利用已创建的模板，批量发布更多页面以实现规模化增长。&lt;/li&gt;
&lt;li&gt;使用Firecrawl MCP进行技术SEO审计，查找并修复网站上的技术SEO错误（例如：&lt;code&gt;crawl this complete website. Find me any technical SEO errors that you can fix.&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;将审计结果提供给Claude Code，让其自动修复这些问题（例如：&lt;code&gt;fix all the technical SEO issues on your site&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;将Figma设计转换为代码&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;利用Figma插件（如Anima）从设计稿中提取Tailwind CSS代码，并将其提供给Claude Code，以确保构建的应用符合品牌风格。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;p&gt;*&lt;/p&gt;
</description>
      <guid isPermaLink="true">https://www.youtube.com/watch?v=DxSDZwpgfRE</guid>
      <pubDate>Mon, 30 Jun 2025 19:00:12 +0800</pubDate>
    </item>
    <item>
      <title>101种AI实用技巧：从日常到职场，全面提升你的效率与生活</title>
      <link>https://www.youtube.com/watch?v=zkXonmqIBFg</link>
      <description>&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=zkXonmqIBFg"&gt;101 Ways To Use AI In Your Daily Life&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本视频介绍了在日常生活中使用AI的101种方法，涵盖了从通用生产力、工作、个人理财、学习、职业/商业到人际关系等各个方面。作者强调，掌握提示工程（Prompt Engineering）是充分利用通用AI工具的关键，这比订阅各种专业化产品更有效。视频旨在展示从简单到高级的AI应用案例，满足不同技能水平用户的需求。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;重要概念：&lt;/strong&gt;
*   &lt;strong&gt;提示工程（Prompt Engineering）&lt;/strong&gt;：指与AI有效沟通以获得所需结果的技能。作者强调其重要性，并指出精通提示工程能让你从通用AI产品中获得巨大价值，甚至超越98%的用户。
*   &lt;strong&gt;Vibe Coding&lt;/strong&gt;：指利用AI工具自行开发小型定制应用或自动化，而非购买专业的订阅服务。案例包括开发番茄钟跟踪应用、个人财务追踪器、以及用于上传和搜索提示的应用等。
*   &lt;strong&gt;AI代理（AI Agents）/代理工作流（Agentic Workflows）&lt;/strong&gt;：能够自主执行复杂多步任务的高级AI系统。案例包括潜在客户生成与自动化、客户服务、数据库查询、报告生成、发票管理、构建交互式仪表板等。
*   &lt;strong&gt;答案分层（Answers Leveling）&lt;/strong&gt;：一种利用AI进行结构化头脑风暴的方法，通过要求不同深度（例如第三或第四层）的答案，以获得更具创意和具体的想法。
*   &lt;strong&gt;第一性原理思考（First Principles Thinking with AI）&lt;/strong&gt;：利用AI来评估现有假设的本质真实性，例如“健身真的必须去健身房吗？”或“省钱真的需要挣更多钱吗？”
*   &lt;strong&gt;苏格拉底教学法（Socratic Method of Learning with AI）&lt;/strong&gt;：利用AI作为导师，通过提出启发性问题来引导学习，而非直接给出答案。
*   &lt;strong&gt;实时流媒体/叙述（Real-time Streaming/Narration）&lt;/strong&gt;：利用AI（如Google AI Studio）实时指导屏幕操作（如Photoshop教程）或叙述正在发生的事件（如球赛解说）。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主要观点：&lt;/strong&gt;
1.  &lt;strong&gt;掌握提示工程能够让通用AI工具发挥超越专业化应用的最大潜能。&lt;/strong&gt;
    *   &lt;strong&gt;支撑：&lt;/strong&gt; “如果你擅长提示工程，你可以从这些通用产品中获得很多，顺便说一下，如果你想在这方面做得更好，我这里有一个视频链接。如果你能完成它，你将比98%的人更擅长提示工程。”作者本人倾向于使用少数基础模型和产品，而非购买昂贵的专业化订阅，因为好的提示工程能力足以应对多种需求。
2.  &lt;strong&gt;AI能将日常琐事转化为高效流程，极大地提升生活质量。&lt;/strong&gt;
    *   &lt;strong&gt;案例：&lt;/strong&gt; 拍摄衣物或冰箱食物照片，让AI提供搭配或食谱建议；生成每周膳食计划和购物清单。
3.  &lt;strong&gt;AI可以作为全天候、高度专业的私人学习导师。&lt;/strong&gt;
    *   &lt;strong&gt;案例：&lt;/strong&gt; 提供各种知识的解释和答案；生成物理难题等问题的完整解题示例；制定特定主题的综合学习计划；创建助记符以提高记忆力；设计模拟考试和测验；利用苏格拉底教学法进行学习；将非虚构书籍中的问题提取并整理成练习册；生成不同语言的语音内容以实现沉浸式学习（如日语播客）；从学习笔记中生成Anki闪卡；利用语音功能练习外语听力和口语；将文档转换为播客格式；利用Perplexity进行研究并制定定制学习计划；根据偏好将学习内容转换为视频、音频或信息图等不同形式；让AI创建完整课程。
4.  &lt;strong&gt;AI的强大之处不仅限于文本处理，还能利用多模态输入（图像、音频、视频）完成多样化任务。&lt;/strong&gt;
    *   &lt;strong&gt;案例：&lt;/strong&gt; 通过图片识别物体（花、蘑菇、鞋）；根据设备手册图片进行故障排除；汇总会议幻灯片图片内容；处理视频内容（YouTube、会议）生成文字记录和摘要；实时共享屏幕以获取软件操作指导；实时解说体育比赛；进行多语言（文本、图片、音频、视频）翻译。
5.  &lt;strong&gt;即使是复杂的专业任务，如财务管理、商业规划乃至法律合同，AI也能提供有效协助。&lt;/strong&gt;
    *   &lt;strong&gt;案例：&lt;/strong&gt; 构建自定义财务仪表板，自动化费用追踪；创建产品需求文档、演示文稿和幻灯片；筛选和分析简历或其他文档；起草商业计划、营销材料、名片和公司政策；创建合同。
6.  &lt;strong&gt;AI在改善人际关系和处理困难对话方面具有显著作用。&lt;/strong&gt;
    *   &lt;strong&gt;案例：&lt;/strong&gt; 向AI寻求不同情境下的关系建议；利用语音功能提前排练困难对话（如薪资谈判、复杂的人际沟通）。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;行动建议/操作指南：&lt;/strong&gt;
*   &lt;strong&gt;通用生产力：&lt;/strong&gt;
    *   利用AI识别物体、排查故障、解读设备手册。
    *   进行比Google更精准的定制化搜索。
    *   创建包含多个目的地的旅行路线。
    *   运用结构化框架（如艾森豪威尔矩阵）评估想法，或使用第一性原理思考来质疑假设。
    *   通过拍照上传会议幻灯片，让AI汇总和总结。
    *   上传视频至Google AI Studio生成转录稿和摘要。
    *   利用AI进行产品推荐和深入研究，Perplexity可用于新闻内容聚合。
*   &lt;strong&gt;工作生产力：&lt;/strong&gt;
    *   将凌乱的待办事项告知AI，让其整理和优先排序。
    *   在切换工作上下文时，让AI为当前任务生成书签、摘要和行动项。
    *   利用AI汇总会议内容、邮件，并撰写邮件和报告。
    *   让AI编辑文本，调整语法、清晰度和语气。
    *   进行结构化头脑风暴（推荐答案分层到第三或第四层）。
    *   使用语音功能进行头脑风暴和问题思考，或练习谈判和角色扮演。
    *   通过拍照或实时共享屏幕，让AI指导软件操作。
    *   利用AI进行文档翻译和大型PDF文档的信息提取。
    *   创建产品需求文档、演示文稿和幻灯片（推荐Claude和Madness）。
    *   利用AI筛选和分析简历，并整理信息为表格。
    *   整合、转换和导出不同形式的数据（音频、视频、数值、非结构化），甚至创建交互式仪表板（推荐Claude）。
    *   利用AI创建操作和技术文档。
    *   制作自己的数字克隆（需获得许可）。
    *   使用Madness创建网站，或利用AI创建各种定制计算器。
    *   利用Perplexity API（无需代码）进行批量研究，例如上传Google表格进行工具研究并汇总。
    *   &lt;strong&gt;提升提示工程能力：&lt;/strong&gt; 查阅免费的提示工程快速入门指南（链接在视频描述中）。
    *   &lt;strong&gt;Vibe Coding与自动化：&lt;/strong&gt; 利用Madness的API密钥实现小型自动化（如抓取YouTube评论）；如果熟悉代码，可以编程实现定时任务或批量邮件发送。自行开发个人应用（如番茄钟、财务追踪、提示词库）。
    *   &lt;strong&gt;构建AI代理：&lt;/strong&gt; 使用N（无代码）或OpenAI的Agents SDK（代码）构建代理工作流，实现潜在客户开发、客户服务、数据库查询、报告生成、发票/调查管理、安全扫描等。
    *   &lt;strong&gt;AI代理训练营：&lt;/strong&gt; 感兴趣者可注册等候名单以获取更多信息。
*   &lt;strong&gt;日常生活：&lt;/strong&gt;
    *   利用AI生成衣物搭配和食物食谱（根据现有衣物和冰箱食材）。
    *   生成每周膳食计划和购物清单（有助于降低采购成本）。
    *   获取室内装饰和设计建议。
    *   针对健康问题获取初步指导和医生建议。
    *   规划和优化保险购买顺序与种类，以及税务优化。
*   &lt;strong&gt;个人理财：&lt;/strong&gt;
    *   制定个性化财务计划，包括储蓄和投资计划（推荐Deep Research）。
    *   规划和分析退休金策略。
    *   构建费用追踪工作流（通过WhatsApp发送收据，自动分类并生成报告）。
    *   构建更复杂的财务管理和自动化工作流。
*   &lt;strong&gt;学习：&lt;/strong&gt;
    *   随时向AI提问并获得解答，获取带步骤的解题示例。
    *   制定特定主题的综合学习计划，创建助记符和模拟考试。
    *   利用苏格拉底教学法深入学习。
    *   将书籍中的练习题提取并整理成练习册。
    *   创建不同语言的语音内容以沉浸式学习（Notebook Lab可用于制作播客）。
    *   从学习笔记生成Anki闪卡。
    *   使用语音功能练习外语听力。
    *   将文档转换为播客格式。
    *   利用Perplexity进行研究并创建定制学习计划。
    *   将学习内容转化为偏好的模式（视频、音频、信息图）。
    *   让AI创建完整课程（Madness在此方面表现出色）。
*   &lt;strong&gt;职业与商业：&lt;/strong&gt;
    *   制定全面的求职策略，研究热门技能并制定学习计划。
    *   让AI审查和批判你的简历、作品集。
    *   利用语音功能进行模拟面试。
    *   获取独特的求职策略。
    *   生成潜在候选人列表，创建入职材料和项目文档。
    *   制定商业计划，了解公司结构和注册流程。
    *   研究和规划商业保险需求。
    *   构建和设计网站、营销宣传册、名片。
    *   撰写合同（非法律建议，但作者本人会使用），制定公司政策。
    *   研究适用的政府和私人基金。
*   &lt;strong&gt;人际关系：&lt;/strong&gt;
    *   向AI寻求不同情境下的关系建议。
    *   利用语音功能提前练习困难对话。
*   &lt;strong&gt;其他有趣应用：&lt;/strong&gt;
    *   创建故事或教育内容的卡通和漫画。
    *   编辑图片（改变颜色、姿态、图案）。
    *   将AI应用于所有编码相关任务。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;金句：&lt;/strong&gt;
*   “如果你擅长提示工程，你可以从这些通用产品中获得很多，顺便说一下，如果你想在这方面做得更好，我这里有一个视频链接。如果你能完成它，你将比98%的人更擅长提示工程。”
*   “AI在学习方面非常棒。它基本上就是一个按需导师，知识渊博，而且24/7随时可用。”
*   “这简直是颠覆性的。”（指用AI练习困难对话）&lt;/p&gt;
</description>
      <guid isPermaLink="true">https://www.youtube.com/watch?v=zkXonmqIBFg</guid>
      <pubDate>Sun, 29 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>编码人生：播客20周年技术演进与AI互动音频的未来展望</title>
      <link>https://hosting.wavpub.cn/dao-bmrs/2025/06/28/%e4%ba%92%e5%8a%a8%e5%bc%8f-ai-%e9%9f%b3%e9%a2%91%e5%88%b0%e5%ba%95%e6%98%af%e4%bb%80%e4%b9%88%ef%bc%9f%e6%96%b0%e5%9e%8b%e6%92%ad%e5%ae%a2%e3%80%81%e8%af%ad%e8%81%8a%e6%88%bf%e8%bf%98%e6%98%af-ai/</link>
      <description>&lt;p&gt;&lt;a href="https://hosting.wavpub.cn/dao-bmrs/2025/06/28/%e4%ba%92%e5%8a%a8%e5%bc%8f-ai-%e9%9f%b3%e9%a2%91%e5%88%b0%e5%ba%95%e6%98%af%e4%bb%80%e4%b9%88%ef%bc%9f%e6%96%b0%e5%9e%8b%e6%92%ad%e5%ae%a2%e3%80%81%e8%af%ad%e8%81%8a%e6%88%bf%e8%bf%98%e6%98%af-ai/"&gt;互动式 AI 音频到底是什么？新型播客、语聊房还是 AI 版 Clubhouse？&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本期播客节目回顾了Apple播客20周年，深入探讨了播客从诞生至今的技术演进、平台发展以及未来的互动式音频可能性。&lt;/p&gt;

&lt;h3&gt;重要的概念&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;互动式音频/播客&lt;/strong&gt;：指用户不再是被动听众，而是可以主动参与到音频内容的生产、对话和共创中，实现与主播、AI乃至其他听众的实时或异步互动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内容级Agent&lt;/strong&gt;：指每个人都可被视为一个能够创作和互动的“内容代理人”，在互动中共同探索和生成新的内容范式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;小宇宙D07功能&lt;/strong&gt;：小宇宙App推出的手机端直接录制和上传播客的功能，极大地降低了播客创作的门槛，让更多普通人（素人）也能轻松成为播客主播。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Back Channel（回馈通道）&lt;/strong&gt;：在AI生成的对话中，指听众或AI在他人讲话时发出的肯定或回应（如“嗯”、“对的”），这些词语在对话管理中起到连接和确认的作用，使对话更自然拟人。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;音频界的Deep-sick时刻&lt;/strong&gt;：主播借Deepmind的AlphaFold系列比喻，预判音频大模型领域何时能出现一个类似AlphaFold的突破性、公认的通用基础模型，如同AI文本模型领域的里程碑，将极大地推动音频技术发展，预估可能在2026年2月到8月之间。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;播客的技术迭代是其普及的关键支撑&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;RSS协议：2000年新增incloser字段支持音频，实现内容订阅分发，打破传统电台收听限制。&lt;/li&gt;
&lt;li&gt;CDN技术：提供快速下载能力，优化用户收听体验，尤其在移动通勤场景下。&lt;/li&gt;
&lt;li&gt;托管平台（如喜马拉雅）：降低主播技术门槛，让创作者专注于内容；小宇宙D07功能进一步将录制和上传下放到手机端，激发大量素人创作热情。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI在音频生产中的应用挑战与机遇&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AI音频剪辑：可识别并去除口水词、环境噪音，提高制作效率。案例：喜马拉雅曾用AI做音简服务有声剧和播客。&lt;/li&gt;
&lt;li&gt;过度剪辑AI的局限性：过于干净的剪辑可能导致听感不自然，缺乏个人韵律和人格化特质。听众反馈认为“太干了”，会拉开用户与创作者的距离。&lt;/li&gt;
&lt;li&gt;AI生成音频的拟人化：AI模型尝试加入口水词、停顿等，模仿人类对话习惯（如back channel），以期更像真人，但当前语音大模型仍未达到“图灵测试”90分以上水平。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;互动式音频是未来的内容范式&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;播客互动模式的演变：从纯听（单向）→评论区（异步文本）→小宇宙评论区（活跃社区互动）→未来实时互动。&lt;/li&gt;
&lt;li&gt;互动式音频的愿景：像一群朋友围绕主题畅聊，共同探索和创作，提供“不确定性的奖励”，增强用户参与感和长期使用意愿。案例：Clubhouse的爆火曾体现了这种需求。&lt;/li&gt;
&lt;li&gt;“消费即创作”的新范式：大模型上半场是“创作即消费”（创作能力下放），下半场将是“消费即创作”，通过互动让用户在消费中产生新的内容。&lt;/li&gt;
&lt;li&gt;“Always On”和低侵入性：未来的互动式音频应像插件般融入生活，用户可在需要时随时介入互动，而不是被强制要求互动。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;当前互动音频技术基建仍待完善&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;端云大模型：现有语音模型（如DONO）在语音语义统一空间建模、多通道建模、情感复原等方面仍有很大进步空间。&lt;/li&gt;
&lt;li&gt;推理成本：大模型推理成本高昂，制约广泛应用。&lt;/li&gt;
&lt;li&gt;RAG（检索增强生成）整合：当前DONO模型无法直接挂载知识库，需先转文本再处理，语音信息在转换中可能损失。&lt;/li&gt;
&lt;li&gt;新的开源音频模型：期待像Deep-sick那样具有里程碑意义的开源语音模型出现，以加速行业发展。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;行动建议&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;对于播客新手&lt;/strong&gt;：如果你想尝试制作播客，可以直接使用小宇宙的D07功能在手机上录制和发布，先录6-7期看是否想继续，再考虑更专业的平台或自建站。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对于技术开发者&lt;/strong&gt;：与其花费大量精力去自建播客托管网站，不如将时间投入到更有意义的开发项目中，为开源社区贡献或积累经验，可能会带来更多价值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多听播客，与世界连接&lt;/strong&gt;：播客不仅是获取信息的载体，更是与世界连接的纽带，鼓励大家多利用播客拓展视野。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“因为人问问题是人的本能人表达是真天性而这个现在是中国广大的创作者最核心的价值”&lt;/li&gt;
&lt;li&gt;“我是非常尊敬做技术的就是这个原教旨主义者同时我也非常赞美这些做产品把这两端给连接在一起的产品运营的人”&lt;/li&gt;
&lt;li&gt;“人是环境的反应器”&lt;/li&gt;
&lt;li&gt;“上半场其实大家核心还是围绕着生产效率或生产利益的爆发式的革命把创作当消费但我觉得下半场应该是消费即创作我觉得这是完全两个不同的不同的范式的变化”&lt;/li&gt;
&lt;li&gt;“大模型它本质是个压缩那它可能会涌现出一定的智慧可能性那它会给你一些灵感但是我觉得真正有趣的事情一定是来自于这个人过往所有的经历的环境以及经历所产生的东西就是我觉得这就是人最大的魅力”&lt;/li&gt;
&lt;li&gt;“当他一直在观察你和甚至你需要的他可能会主动去提醒你对对很多时候应该是这样才叫我们就Always On也好对实际互动也好”&lt;/li&gt;
&lt;li&gt;“我觉得是说呃每每个人都是在这个时代下光速的在成长然后然后我觉得其实播客也在成长然后那其实我觉得呃播客其实不仅是承载我们获取信息的一个载体它更像是我们在跟世界连接的这个载体”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://hosting.wavpub.cn/dao-bmrs/2025/06/28/%e4%ba%92%e5%8a%a8%e5%bc%8f-ai-%e9%9f%b3%e9%a2%91%e5%88%b0%e5%ba%95%e6%98%af%e4%bb%80%e4%b9%88%ef%bc%9f%e6%96%b0%e5%9e%8b%e6%92%ad%e5%ae%a2%e3%80%81%e8%af%ad%e8%81%8a%e6%88%bf%e8%bf%98%e6%98%af-ai/</guid>
      <pubDate>Sat, 28 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>Vibe_Coding：AI随心编程与Cloudbase_AI_Toolkit在微信小程序开发中的实践</title>
      <link>https://www.bilibili.com/video/BV15gKdz1E5N</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV15gKdz1E5N"&gt;软件3.0：AI 编程新时代的最佳拍档 CloudBase AI ToolKit，以开发微信小程序为例&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本文深入探讨了AI时代的新编程范式“Vibe Coding”和“软件3.0”，即以自然语言（提示词）作为编程接口。文章通过Andrej Karpathy的演讲，将大型语言模型（LLM）类比为操作系统和发电厂，并重点展示了Cloudbase AI Toolkit如何赋能AI驱动的微信小程序开发，实现从想法到产品上线的自动化。&lt;/p&gt;

&lt;h3&gt;重要概念解释&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Vibe Coding（AI随心编程）&lt;/strong&gt;：指通过自然语言与AI交互进行编程，不再需要传统编程语言的深厚知识。文章以一位开发者在无Swift经验的情况下，通过Vibe Coding构建iOS应用为例进行说明。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;软件3.0&lt;/strong&gt;：指以大语言模型的提示词（Prompt）作为新的编程语言。它将LLM视为一种新型电脑或操作系统，提示词则是指挥这台电脑自动处理任务的指令。这与传统编程（软件1.0，如Python、JavaScript的确定性输出）和优化数据集（软件2.0，调整神经网络参数）形成对比，突显了编程接口的日益简化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LLM的类比&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;操作系统&lt;/strong&gt;：闭源LLM（如OpenAI、Claude）类似macOS、Windows；开源LLM（如Llama、DeepSeek）类似Linux。LLM的上下文窗口（如32K或100万token）被比作计算机的RAM，作为LLM交互的工作记忆窗口，强调其目前有限，需借助外部工具（如笔记软件）进行扩充，从而引出为AI提供足够好的上下文的重要性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;发电厂&lt;/strong&gt;：LLM的预训练成本（如GPT的预训练）高昂，类似电厂的基础设施建设；但后续推理的运营成本相对较低，类似日常供电。OpenRouter被比作“供电开关”，可以在不同“供电厂”之间切换；BibiGPT则被比作“电器”，利用“供电厂”的电力。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MCP（Model Context Protocol，模型上下文协议）&lt;/strong&gt;：AI Agent的工具集，将开发者的原子化操作（如部署、数据库操作、查日志）工具化，供AI直接调用。文章以Cloudbase的MCP包为例，其中包含环境管理、数据操作、静态托管等具体方法，AI Agent能根据能力自动调用。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自然语言成为新的编程接口，降低编程门槛&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;在软件3.0时代，提示词本身就是一种新的编程语言，使普通人也能通过自然语言指挥AI进行编码，不再局限于专业程序员。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI开发工具套件大幅提升开发效率和自动化程度&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;Cloudbase AI Toolkit整合了成熟的脚手架、基于Cursor的IDE rules（规范AI行为）和MCP服务（AI工具集），能实现从项目初始化到部署运维的高度自动化。&lt;/li&gt;
&lt;li&gt;案例：通过Cursor和Cloudbase AI Toolkit，仅用两个提示词往返就基本完成了支持语音记账的微信小程序，包括自动安装依赖、创建页面、修改样式、设计数据库、部署云函数、进行AI解析及错误纠正。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高质量的AI代码生成依赖于精准的上下文和预设规则&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;鉴于LLM预训练数据可能过时，向AI提供恰当的上下文（如最新文档链接）至关重要，如同为人类提供“工作记忆”，确保AI理解需求和规范。&lt;/li&gt;
&lt;li&gt;通过定义详细的Prompt rules（如AI Agent的角色、技能和用例），可以引导AI生成符合预期的、结构统一且合理的代码。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI Agent能够自动化并隐藏底层技术复杂性&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;MCP服务将传统的开发者操作（如数据库管理、云函数部署）封装为AI可调用的工具，使AI能够自动执行复杂的后台操作，甚至自动排查并纠正错误，用户无需深入了解底层技术细节。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;行动建议与操作指南&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;使用Cloudbase AI Toolkit&lt;/strong&gt;：下载并安装微信开发者工具，将Cloudbase提供的代码模板导入微信开发者工具和Cursor。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置环境&lt;/strong&gt;：在腾讯云注册并创建云开发环境，获取Environment ID并将其配置到小程序项目的&lt;code&gt;app.js&lt;/code&gt;文件中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI驱动开发&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;通过Cursor让AI自动安装项目依赖（如输入“请帮我安装依赖”）。&lt;/li&gt;
&lt;li&gt;利用Cursor的“auto-run”功能，让AI自动执行命令行脚本，提升效率。&lt;/li&gt;
&lt;li&gt;直接向AI提出高层次需求（如“帮我创建一个AI记账应用，支持语音输入”），AI将自动分析、设计并生成代码（包括页面骨架、样式、数据库设计、云函数等）。&lt;/li&gt;
&lt;li&gt;如果遇到云函数部署问题，确保Cursor的MCP tools配置已开启，允许AI自动调用相关云服务。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提供精确上下文&lt;/strong&gt;：当AI需要特定领域的知识（如微信小程序模型服务接口），可以直接将官方文档链接提供给AI，让其自行学习并实现功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全实践&lt;/strong&gt;：在非正式或生产环境中，建议禁用MCP中具有潜在危险的操作（如删除整个数据库集合），以防误操作。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“AI时代，每个创业者和知识工作者都必须看的演讲。”&lt;/li&gt;
&lt;li&gt;“提示词prompt本身就是一种新的编程语言了。”&lt;/li&gt;
&lt;li&gt;“相当于大语言模型是一种新的电脑或者叫操作系统，而我们的prompt就相当于指挥大语言模型的一种指令。”&lt;/li&gt;
&lt;li&gt;“当我们所有的工具都为Agent开放了能力的接口，比如说MCP，比如说这些LMS. text这样的文档，那么未来AI所能干的事情就会越来越多越来越多，我们也就能够快速把想法变为现实。”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV15gKdz1E5N</guid>
      <pubDate>Thu, 26 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>AI驱动的软件3.0实践：Vibe_Coding与Cloudbase_AI_Toolkit实战详解</title>
      <link>https://www.bilibili.com/video/BV15gKdz1E5N</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV15gKdz1E5N"&gt;软件3.0：AI 编程新时代的最佳拍档 CloudBase AI ToolKit，以开发微信小程序为例&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;h3&gt;主要内容&lt;/h3&gt;

&lt;p&gt;本文介绍了Andrej Karpathy提出的“Vibe Coding”（AI随心编程）概念，将其定位为AI时代的软件3.0开发范式。文章深入探讨了如何通过自然语言与大型语言模型（LLM）交互进行编程，并结合Cloudbase AI Toolkit在微信小程序开发中的实际应用，展示了AI在提升开发效率方面的巨大潜力。&lt;/p&gt;

&lt;h3&gt;重要概念与解释&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Vibe Coding（AI随心编程）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;: 一种新的编程方法，将自然语言（提示词prompt）作为编程接口，大型语言模型（LLM）充当“新型电脑”或“操作系统”，通过声明式指令自动化处理任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;案例/类比&lt;/strong&gt;: 文章将软件开发分为1.0（传统编程，如Python/JavaScript）、2.0（优化数据集/权重，如训练图像分类器）和3.0（自然语言Prompt驱动LLM）。这种演变体现了编程复杂度的逐渐降低，从硬核代码到参数再到提示词。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LLM的类比&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;: 将LLM比作操作系统（如OpenAI/Claude之于macOS/Windows，Llama/DeepSeek之于Linux），或操作系统中的CPU。其上下文窗口（如32K或100万token）被类比为RAM，即LLM与用户交互的“工作记忆”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;案例/类比&lt;/strong&gt;: 人类的工作记忆有限，需借助笔记、纸笔等外部工具扩充；LLM也类似，需要足够精准的上下文才能更好地实现需求、生成符合规范的代码。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LLM作电厂类比&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;: LLM的预训练成本极高，类似于建设电厂的基础设施投入；而训练完成后的后续运营（推理）成本相对较低，如同电厂建成后的日常供电成本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;案例/类比&lt;/strong&gt;: 用户订阅ChatGPT或使用LLM服务需按月付费，类似于用电需要耗费成本。OpenRouter被比作“供电开关”，可在不同“供电厂”（LLM）之间切换；应用层产品如BibiGPT则像“电器”，使用来自“供电厂”的“电”。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloudbase AI Toolkit&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;: 一个AI驱动的云开发解决方案，提供一整套工具和模式，帮助开发者从想法到应用上线。它整合了AI生成脚手架、Cursor的规则（rules）和模型上下文协议（MCP）服务。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cursor Rules&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;: 在Cursor等IDE中为AI Agent定义的具体规则集，包括智能体扮演的角色（如精通微信小程序的前端AI Agent）、可调用的技能（如安装依赖、部署云函数、下载上传静态资源）以及用于学习的用例。它还能将文档信息作为上下文传递给AI，确保代码生成符合规范。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MCP（Model Context Protocol）服务&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;: AI Agent的一个工具集，将开发者常用的工具（如部署、数据库操作、查日志）原子化，使AI可以直接调用并执行这些任务。该服务在Cloudbase AI Toolkit中通过&lt;code&gt;mcp.json&lt;/code&gt;文件定义，包含环境管理、数据操作、静态托管等方法。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;自然语言提示词（Prompt）正成为AI时代的一种新型编程语言，大幅降低了编程门槛，使“人人都是程序员”成为可能。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逻辑支撑&lt;/strong&gt;: 软件开发从1.0（硬核代码）到2.0（优化数据集/参数）再到3.0（自然语言Prompt驱动LLM）的演变，复杂性不断降低。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;LLM被类比为操作系统、CPU和RAM，提示词则如同指挥新电脑的指令，上下文窗口是其工作记忆，强调了提供精准上下文的重要性。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;类比支撑&lt;/strong&gt;: 将LLM比作macOS/Windows/Linux，上下文窗口比作RAM，并指出其需要外部辅助（如文档）扩展工作记忆，以生成更完善的代码。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;AI驱动的开发套件（如Cloudbase AI Toolkit）能够将开发流程模块化、自动化，极大地提升开发效率。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;案例支撑&lt;/strong&gt;: Cloudbase AI Toolkit集成了AI生成脚手架、Cursor Rules（AI Agent规范）、MCP服务（AI工具集），实现从想法到上线的一站式解决方案。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;MCP服务（模型上下文协议）将开发者常用工具原子化，使AI Agent能够自动调用并执行部署、数据库操作等任务。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;案例支撑&lt;/strong&gt;: 演示了通过MCP服务在微信小程序中自动安装依赖、部署云函数、创建数据库集合、处理数据等，整个过程几乎无需人工介入。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;AI在编程中能自动纠错、理解项目结构，并遵循规范生成统一合理的代码架构，解放开发者生产力。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;案例支撑&lt;/strong&gt;: Cursor自动运行命令行脚本，修复报错，理解项目结构（小程序、云开发目录），并根据文档学习实现功能，生成的代码架构统一合理。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;微信云开发提供的AI能力，如直接调用DeepSeek模型，使得在小程序中集成高级AI功能变得非常简单。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;案例支撑&lt;/strong&gt;: 文中提到通过&lt;code&gt;extend.ai&lt;/code&gt;接口结合&lt;code&gt;ENV ID&lt;/code&gt;，可以直接在小程序中调用DeepSeek模型进行语音记账的AI解析（金额、类别），产出JSON文件。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;行动建议或操作指南&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Vibe Coding 实践&lt;/strong&gt;: 推荐使用Cloudbase AI Toolkit，利用其AI生成脚手架、Cursor Rules配置AI Agent行为，并启用MCP服务让AI自动化操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;微信小程序开发实战&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;下载Cloudbase AI Toolkit项目代码，用微信开发者工具和Cursor打开。&lt;/li&gt;
&lt;li&gt;在腾讯云创建云开发环境，获取&lt;code&gt;environment ID&lt;/code&gt;并配置到小程序&lt;code&gt;app.js&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在Cursor中让AI自动安装项目依赖、创建应用功能（如语音记账），并开启MCP工具。&lt;/li&gt;
&lt;li&gt;遇到报错时，将报错信息复制给Cursor，让其自动纠错。&lt;/li&gt;
&lt;li&gt;确保云函数已成功部署，并完成必要的微信认证/实名认证。&lt;/li&gt;
&lt;li&gt;通过小程序&lt;code&gt;extend.ai&lt;/code&gt;接口调用DeepSeek等模型，实现语音识别与AI解析功能。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开发技巧&lt;/strong&gt;: 在Cursor中开启&lt;code&gt;auto-run&lt;/code&gt;自动执行命令行脚本，并开启声音提醒以提高效率。对于正式数据库环境，建议禁用MCP中危险的删除操作。为AI提供官方文档链接，让其自行学习和实现复杂功能。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“AI时代，每个创业者和知识工作者都必须看的演讲。”&lt;/li&gt;
&lt;li&gt;“提示词prompt本身就是一种新的编程语言了。”&lt;/li&gt;
&lt;li&gt;“让人人都成为，都是程序员变为了可能。”&lt;/li&gt;
&lt;li&gt;“像这些所谓数据库服务器的概念会变成另外一层抽象被隐藏起来了，所以我们作为人就可以单纯使用语言，自然语言的方式去指挥或者叫声明式的让AI去操作更为底层的这些技术模块。”&lt;/li&gt;
&lt;li&gt;“当我们所有的工具都为Agent开放了能力的接口……那么未来AI所能干的事情就会越来越多越来越多，我们也就能够快速把想法变为现实。”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV15gKdz1E5N</guid>
      <pubDate>Thu, 26 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>AI时代软件3.0：Vibe_Coding实践与Cloudbase_AI_Toolkit在小程序开发中的应用</title>
      <link>https://www.bilibili.com/video/BV15gKdz1E5N</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV15gKdz1E5N"&gt;软件3.0：AI 编程新时代的最佳拍档 CloudBase AI ToolKit，以开发微信小程序为例&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;文章介绍了“Vibe Coding”（AI随心编程）作为软件3.0时代的新型编程方式，强调自然语言在大语言模型背景下成为核心编程接口。作者通过实际案例，演示了如何利用Cloudbase AI Toolkit和Cursor工具高效开发微信小程序，实现AI驱动的自动化开发流程。整个过程展现了AI工具如何简化开发步骤、提高效率，并展望了未来AI Agent与工具集成的巨大潜力。&lt;/p&gt;

&lt;h3&gt;重要的/新鲜的概念与解释&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Vibe Coding (AI随心编程)&lt;/strong&gt;：指AI驱动的编程方式，其中自然语言（提示词prompt）成为新的编程语言，通过大语言模型直接进行编码，无需传统编程经验。
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;案例：&lt;/em&gt; 文章引用Andrej Karpathy的推文，指出一位没有Swift经验的开发者通过Vibe Coding完成了iOS App开发，突显了其高效性。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;软件开发1.0、2.0、3.0&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1.0 (传统编程)&lt;/strong&gt;：使用Python、JavaScript等语言，计算机输出确定性结果（例如：记账应用的用户界面、数据库操作）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2.0 (优化数据集)&lt;/strong&gt;：以优化数据集和权重为核心，通过调整参数影响模型识别效果（例如：训练发票图像分类器，参数即编程性）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3.0 (大语言模型时代)&lt;/strong&gt;：提示词本身就是新的编程语言，通过自然语言直接编码。大语言模型是新的“电脑”或“操作系统”，提示词是其指令。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;对比：&lt;/em&gt; 人类输出从硬核代码、参数到提示词，复杂度逐步降低。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大语言模型类比 (Andrej Karpathy)&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;操作系统 (OS)&lt;/strong&gt;：LLM被比作操作系统（闭源如OpenAI/Claude，开源如Llama/DeepSeek）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt;：LLM进一步被比作操作系统中的CPU。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RAM&lt;/strong&gt;：LLM的上下文窗口（如32K或100万token）被比作RAM，需要外部工具（如笔记软件）辅助扩充工作记忆，以确保思考和推理的完备性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电厂 (Power Plant)&lt;/strong&gt;：LLM的预训练成本高昂（基础设施建设），而后续运营成本相对较低（供电）。应用层（如BibiGPT）是“电器”，使用“供电厂”（如OpenAI）的电力。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloudbase AI Toolkit&lt;/strong&gt;：一个AI驱动的云开发解决方案，提供一套完整的工具，支持新的软件开发模式，简化从想法到上线的全过程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cursor Rules&lt;/strong&gt;：在Cursor IDE中预设的规则/提示词，用于指导AI Agent（如精通微信小程序开发的AI Agent）如何调用工具、遵循规范，从而生成结构统一且合理的代码。包含角色定义、技能（如安装依赖、部署云函数）及具体用例。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MCP服务 (模型上下文协议 / Model Context Protocol)&lt;/strong&gt;：可理解为AI Agent的工具集，将传统开发者工具（如部署、数据库操作、日志查询）原子化、工具化，供AI直接调用。通过&lt;code&gt;mcp.json&lt;/code&gt;文件定义，例如Cloudbase的MCP包包含环境管理、数据操作、静态托管等方法，AI Agent可按需自动调用。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;自然语言成为编程接口，让“人人都是程序员”变为可能。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;支持：&lt;/em&gt; 软件3.0时代，提示词（prompt）本身就是一种新的编程语言，通过自然语言直接编码，大语言模型是新的电脑或操作系统，prompt是指令。人类输出从硬核代码、参数到提示词，变得越来越简单。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开发工具不再是单纯的IDE，而是与大语言模型深度集成，通过对话或侧边栏直接指挥AI。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;支持：&lt;/em&gt; Cursor的右侧边栏与大语言模型深度集成（如Claude），开启Max模式后，多数功能一句话即可完成，极大提升了生产力。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI不仅生成代码，还能自动排查错误、调用外部服务（如云函数、数据库）并遵循规范。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;支持：&lt;/em&gt; 实际案例中，AI不仅创建页面骨架、样式、配置和README，还能在云函数创建失败时自动纠错、修改代码，并调用Cloudbase的MCP服务进行数据库创建、部署、数据操作等，全程几乎无需人工介入。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;云服务提供的原子化工具集（如MCP）是未来AI Agent能力扩展的关键。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;支持：&lt;/em&gt; Cloudbase的MCP服务提供了多达41个供AI调用的API方法（如上传文件、删除文件、数据库集合创建与更新），这些工具的开放接口使得AI能自动化处理传统上需手动执行的复杂任务，比在云服务后台手动操作高效太多。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;未来，底层技术模块将被抽象和隐藏，普通人仅需通过自然语言指挥AI完成复杂任务。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;支持：&lt;/em&gt; 数据库、服务器等概念将变为抽象层被隐藏起来，用户作为人，可以单纯通过自然语言以声明式的方式指挥AI操作更为底层的技术模块。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;为AI Agent开放工具接口（如MCP、LMS.text文档）将极大提升AI的能力边界。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;支持：&lt;/em&gt; 当所有工具都为Agent开放了能力的接口，AI所能干的事情就会越来越多，人类也就能够快速把想法变为现实。文章提到2025年可能是Agent元年，未来10年将持续完善。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;行动建议/操作指南&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;AI编程实践流程 (以微信小程序为例，使用Cloudbase AI Toolkit &amp;amp; Cursor)&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;下载Cloudbase AI Toolkit提供的项目代码模板。&lt;/li&gt;
&lt;li&gt;使用微信开发者工具打开小程序项目。&lt;/li&gt;
&lt;li&gt;通过Cursor打开同一项目目录，确保Cursor的rules和MCP服务已安装成功。&lt;/li&gt;
&lt;li&gt;在腾讯云配置云开发环境，获取&lt;code&gt;environment ID&lt;/code&gt;并替换到小程序&lt;code&gt;app.js&lt;/code&gt;中。&lt;/li&gt;
&lt;li&gt;让Cursor自动安装项目依赖（例如，在Cursor中输入“请帮我安装依赖”）。&lt;/li&gt;
&lt;li&gt;使用自然语言向Cursor提出具体需求（例如：“帮我创建一个AI记账应用，支持语音输入，能自动识别类目和金额”）。&lt;/li&gt;
&lt;li&gt;根据Cursor提示，开启MCP tools（如果未开启，通过配置搜索打开）。&lt;/li&gt;
&lt;li&gt;接受AI生成的代码和配置更改（点击“Accept All”）。&lt;/li&gt;
&lt;li&gt;在微信开发者工具中预览效果并进行调试。&lt;/li&gt;
&lt;li&gt;如遇报错，将报错信息复制给Cursor进行自动纠错。&lt;/li&gt;
&lt;li&gt;根据AI提示，进行必要的授权操作（如腾讯云CLI权限确认）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优化AI生成代码的技巧&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;提供精准上下文&lt;/strong&gt;：由于大语言模型的预训练数据可能过时，需提供足够好、足够精准的上下文，例如将最新的官方文档链接（如微信小程序接入DeepSeek模型能力的文档）作为上下文提供给AI，让其自行学习并实现需求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;谨慎操作敏感功能&lt;/strong&gt;：对于某些相对危险的操作（如删除整个数据库集合），建议在正式的数据库环境中，先禁用（disable）对应MCP方法的调用，避免不必要的风险。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“AI时代，每个创业者和知识工作者都必须看的演讲。”&lt;/li&gt;
&lt;li&gt;“提示词prompt本身就是一种新的编程语言了。它可以让我们通过自然语言的方式直接进行编码。”&lt;/li&gt;
&lt;li&gt;“大语言模型是一种新的电脑或者叫操作系统，而我们的prompt就相当于指挥大语言模型的一种指令。”&lt;/li&gt;
&lt;li&gt;“我们所写的人类的输出，从原本的硬核代码再到2.0阶段的各种参数，再到软件3.0的prompt，其实是在变得越来越简单。”&lt;/li&gt;
&lt;li&gt;“当我们所有的工具都为Agent开放了能力的接口，比如说MCP，比如说这些LMS. text这样的文档，那么未来AI所能干的事情就会越来越多越来越多，我们也就能够快速把想法变为现实。”&lt;/li&gt;
&lt;li&gt;“让我想起了Andrej Karpathy它的一个倡议吧，它觉得今年2025年是一个Agent的元年，但是整个发展还需要有10年左右来持续完善。”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV15gKdz1E5N</guid>
      <pubDate>Thu, 26 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>深入解析Google_GEMINICAI：功能、使用体验与竞品对比</title>
      <link>https://www.bilibili.com/video/BV1nRKRzdEy9</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1nRKRzdEy9"&gt;同样是 AI 编程，Gemini CLI 不花钱还很强！&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本文详细介绍了Google的GEMINICAI命令行工具及其VSCode集成，探讨了其功能、用户体验、与Cursor、Augment、Crowd Code等竞品的对比，并提供了配置、命令和调试技巧。作者分享了其使用GEMINI Code Assistant Agent模式和GEMINICAI处理项目时的具体感受与发现，包括其优点和不足。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;重要概念&lt;/strong&gt;
- &lt;strong&gt;GEMINICAI&lt;/strong&gt;: Google开发的基于Gemini模型的命令行AI编程工具，专注于代码辅助和自动化。
- &lt;strong&gt;GEMINI Code Assistant Agent模式&lt;/strong&gt;: VSCode中的Gemini AI辅助模式，支持多步骤复杂任务，但需要手动确认每一步。
- &lt;strong&gt;YO模式&lt;/strong&gt;: GEMINICAI中的一个设置，表示自动批准所有工具调用，可加速操作但有潜在风险。
- &lt;strong&gt;MCP (AI图片生成工具)&lt;/strong&gt;: GEMINI内部集成的AI图片生成服务，可直接在CI中调用以生成网页资源。
- &lt;strong&gt;Context files (Gemini markdown, settings.json)&lt;/strong&gt;: 用于配置GEMINI行为和上下文管理的特殊文件，如定义默认回复语言、工具配置等。
- &lt;strong&gt;Sandbox模式&lt;/strong&gt;: 一种隔离的执行环境，其中YO模式默认开启，用于安全地测试代码和命令。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主要观点&lt;/strong&gt;
- GEMINICAI最大的亮点是免费使用，且写文章能力出色，但用户的提示和相关代码可能会用于改进谷歌产品和模型训练。
  - 支持: 最高每分钟可调用60次，每天最多1000次，并且开源。
- 尽管GEMINICAI在不断完善并增加功能，其在UI设计能力和文件编辑速度上仍与Crowd Code等成熟工具存在差距。
  - 支持: 有用户反馈相同任务，Crowd Code耗时6分钟，而GEMINICAI耗时30分钟。
- 对于复杂任务，GEMINI的“先做计划”策略表现出色，甚至被认为优于Crowd Code的同类能力。
  - 支持: 谷歌员工Philip建议复杂任务先做计划，许多用户也认为GEMINI的计划能力更强。
- GEMINI Code Assistant的Agent模式比非Agent模式有显著进步，但在多步骤任务处理和命令行的稳定性上仍需提升，易出现文件删除或冲突问题。
  - 支持: 案例中Agent模式在创建Next.js项目时，出现多次手动确认、错误自修复、甚至错误删除文件的现象。
- GEMINICAI具备谷歌搜索集成、自定义配置和自动化集成等功能，但其内置工具数量少于Crowd Code和成熟AI编程工具。
- 在使用过程中，YO模式虽然能自动批准工具调用，但一些谷歌员工（如Philip）不倾向于使用，更倾向于手动拦截和重新提示。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;行动建议/操作指南&lt;/strong&gt;
- &lt;strong&gt;安装GEMINICAI&lt;/strong&gt;: 使用npm命令 &lt;code&gt;npm i -g @google/generative-ai-cli&lt;/code&gt; 进行全局安装。
- &lt;strong&gt;启动GEMINICAI&lt;/strong&gt;: 在终端输入 &lt;code&gt;gemini&lt;/code&gt; 即可启动。
- &lt;strong&gt;登录认证&lt;/strong&gt;: 首次启动会引导网页认证，或通过命令行 &lt;code&gt;/s login&lt;/code&gt; 选择谷歌账号登录；默认会从环境变量中获取GEMINI API Key。
- &lt;strong&gt;在VSCode中开启Gemini Code Assistant Agent模式&lt;/strong&gt;: 
    1. 打开VSCode。
    2. 使用 &lt;code&gt;command + shift + p&lt;/code&gt; 快捷键，选择 &lt;code&gt;open user sitting json&lt;/code&gt;。
    3. 在 &lt;code&gt;Gemini code assistant&lt;/code&gt; 配置下方添加特定行以启用Agent模式。
- &lt;strong&gt;设置上下文文件&lt;/strong&gt;: 
    - 全局上下文：在电脑主目录下新建 &lt;code&gt;.gemini&lt;/code&gt; 文件夹，并在其中创建 &lt;code&gt;Gemini markdown&lt;/code&gt; 文件。
    - 项目级上下文：在项目根目录放置 &lt;code&gt;Gemini markdown&lt;/code&gt; 或 &lt;code&gt;settings.json&lt;/code&gt; 文件。
- &lt;strong&gt;常用命令行操作&lt;/strong&gt;: 
    - &lt;code&gt;/help&lt;/code&gt;: 查看所有命令。
    - &lt;code&gt;/chat resume/list/clear&lt;/code&gt;: 管理对话历史。
    - &lt;code&gt;@文件/目录路径&lt;/code&gt;: 将文件或目录内容作为上下文引入。
    - &lt;code&gt;!命令&lt;/code&gt;: 在CUI内部执行系统shell命令。
    - &lt;code&gt;/&lt;/code&gt;: 切换到shell模式。
    - &lt;code&gt;-m 模型名称&lt;/code&gt;: 指定使用的Gemini模型。
    - &lt;code&gt;-p 提示词&lt;/code&gt;: 非交互模式下直接传递提示。
    - &lt;code&gt;-s&lt;/code&gt;: 启用沙箱模式。
    - &lt;code&gt;-d&lt;/code&gt;: 启用调试模式，获取更详细输出。
    - &lt;code&gt;-a&lt;/code&gt;: 递归包含当前目录所有文件作为上下文。
    - &lt;code&gt;-A&lt;/code&gt;: 启用YO模式，自动批准所有工具调用。
- &lt;strong&gt;记忆管理&lt;/strong&gt;: 
    - &lt;code&gt;/memory refresh&lt;/code&gt;: 强制重新扫描和加载所有上下文文件。
    - &lt;code&gt;/memory show&lt;/code&gt;: 显示当前上下文。
- &lt;strong&gt;调试技巧&lt;/strong&gt;: 
    - "Command not found": 检查GEMINICAI是否正确安装或是否在系统PATH中。
    - 身份验证问题: 注意工作区账户和Gmail账户的关联，可能需要配置&lt;code&gt;cloud project&lt;/code&gt;。
    - 获取详细输出: 使用 &lt;code&gt;VERBOX&lt;/code&gt; 标志运行。
- &lt;strong&gt;自定义系统提示词&lt;/strong&gt;: 通过环境变量设置，例如定义AI的角色、项目特定规则和沟通风格。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;金句&lt;/strong&gt;
- "TIMICOI非常大的亮点呢就是免费"
- "谷歌的工作人员菲利普 他分享了使用GEMINICAI的设置 对于复杂的任务 他一上来不是先编码 而是说让他先做一个计划 很多用户呢也是觉得GEMINI先做计划是要比crowd sony的四强"
- "它的构件呢比open i的codex c i是要更好一点的"&lt;/p&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1nRKRzdEy9</guid>
      <pubDate>Thu, 26 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>深入解析GEMINICAI：功能、使用体验、对比与配置全指南</title>
      <link>https://www.bilibili.com/video/BV1nRKRzdEy9</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1nRKRzdEy9"&gt;同样是 AI 编程，Gemini CLI 不花钱还很强！&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本文详细介绍了谷歌的GEMINICAI工具，包括其功能特性、实际使用体验、与竞品（如Crowd Code、Cursor、Augment）的对比，并提供了详尽的配置和使用指南。&lt;/p&gt;

&lt;h3&gt;重要的概念&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GEMINICAI&lt;/strong&gt;：谷歌推出的一款高度模仿Crowd Code的AI代码助手工具，旨在帮助开发者进行编码、文档生成和自动化任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Agent模式&lt;/strong&gt;：在Gemini Code Assistant中提供的一种更高级的交互模式，需要特定设置，能够处理更复杂的任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MCP（Memory Tools, Compress）&lt;/strong&gt;：GEMINICAI内置的一些特殊命令，用于记忆管理和压缩等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UO模式&lt;/strong&gt;：GEMINICAI中的一个功能，表示自动批准所有工具调用，在沙箱模式下默认开启。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上下文文件（Gemini markdown, settings JSON）&lt;/strong&gt;：用于为GEMINICAI提供额外上下文信息的文件，可以帮助AI更好地理解项目和用户意图。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;沙箱模式&lt;/strong&gt;：GEMINICAI提供的一个安全执行环境，在该模式下，UO模式默认开启。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;GEMINICAI在UI设计和工具集方面目前弱于竞品，但其免费是最大亮点。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据/逻辑/案例支撑&lt;/strong&gt;：其UI设计能力不如Crowd Code，工具集也少于成熟AI编程工具。用户反馈显示，完成相同任务时，Crowd Code耗时6分钟，而GEMINICAI耗时30分钟。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;谷歌内部员工建议，对于复杂任务应优先进行计划，GEMINI在计划制定上表现出色。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据/逻辑/案例支撑&lt;/strong&gt;：谷歌工作人员菲利普分享经验，并指出很多用户认为GEMINI的计划制定能力优于Crowd Code。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GEMINICAI在文章撰写方面表现不错，并支持通过脚本实现任务自动化。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据/逻辑/案例支撑&lt;/strong&gt;：作者亲测表示GEMINI写文章效果很好，并指出可以通过脚本调用GEMINICAI来自动化任务。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;虽然Gemini Code Assistant的Agent模式相较于非Agent模式有显著进步，但与Cursor或Augment等工具仍有差距。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GEMINICAI的免费使用附带条件：用户的提示和代码会用于改进谷歌产品，包括模型训练。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GEMINICAI的免费使用存在调用限制，例如每分钟最高60次调用，每日最高1000次，超出后会切换到2.5 flash模型。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;行动建议或操作指南&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;如何使用GEMINICAI撰写文章&lt;/strong&gt;：在COI对话框中，直接指示GEMINICAI在指定目录中撰写关于某个主题的文章。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;查看内置命令&lt;/strong&gt;：登录后，输入&lt;code&gt;/help&lt;/code&gt;可以查看其多个命令，包括&lt;code&gt;mc p memory tools&lt;/code&gt;和&lt;code&gt;compress&lt;/code&gt;等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;启用VSCode中Gemini Code Assistant的Agent模式&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;在VSCode中，通过&lt;code&gt;Command + Shift + P&lt;/code&gt;选择&lt;code&gt;Open User Settings (JSON)&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;google.gemini.code-assistant&lt;/code&gt;下方添加&lt;code&gt;"google.gemini.code-assistant.enableAgentMode": true&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解决GEMINICAI登录问题&lt;/strong&gt;：建议先在VSCode中安装并登录Gemini Code Assistant，然后再运行GEMINICAI。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在Agent模式中进行上下文关联&lt;/strong&gt;：为确保上下文关联，最好使用&lt;code&gt;@&lt;/code&gt;符号指定整个项目目录或具体文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;修改登录方式&lt;/strong&gt;：在GEMINICAI中，可以通过&lt;code&gt;/2S&lt;/code&gt;命令选择使用谷歌账号登录以享受免费服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设置上下文文件&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;全局上下文&lt;/strong&gt;：在用户主目录下创建&lt;code&gt;.GEMINI&lt;/code&gt;文件夹，并在其中创建&lt;code&gt;Gemini markdown&lt;/code&gt;文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;项目级上下文&lt;/strong&gt;：在项目根目录创建&lt;code&gt;Gemini markdown&lt;/code&gt;和&lt;code&gt;SETINGSJSON&lt;/code&gt;文件。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;命令行参数&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-M [模型名称]&lt;/code&gt;：指定模型。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P [提示词]&lt;/code&gt;：以非交互模式直接传递提示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S&lt;/code&gt;：启用沙箱模式。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D&lt;/code&gt;：启用调试模式，提供详细输出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A&lt;/code&gt;：递归包含当前目录所有文件作为上下文。&lt;/li&gt;
&lt;li&gt;启用UO模式：可自动批准所有工具调用。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;记忆管理命令&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/memory refresh&lt;/code&gt;：强制重新扫描和加载所有上下文文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/memory show&lt;/code&gt;：显示上下文。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;与系统Shell交互&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;!&lt;/code&gt;：从CUI内部与系统Shell交互。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/ [命令]&lt;/code&gt;：在系统默认Shell中执行给定命令。&lt;/li&gt;
&lt;li&gt;单独输入&lt;code&gt;/&lt;/code&gt;：切换到Shell模式。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更新GEMINICAI&lt;/strong&gt;：使用命令&lt;code&gt;pip install --upgrade google-gemini-code-assistant-cli&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;获取更详细输出&lt;/strong&gt;：使用&lt;code&gt;--verbose&lt;/code&gt;标志。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自定义系统提示词&lt;/strong&gt;：通过环境变量，如&lt;code&gt;GEMINI_CODE_ASSISTANT_SYSTEM_PROMPT&lt;/code&gt;，自定义系统提示词，以定义AI的身份、项目规则和沟通风格。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“GEMINICOI非常大的亮点呢就是免费。”&lt;/li&gt;
&lt;li&gt;“它的写文章也是很不错。”&lt;/li&gt;
&lt;li&gt;“对个人开发者而言，在免费使用方面，它有着无与伦比的优势。”&lt;/li&gt;
&lt;li&gt;“GEMINICI呢非常好 它是开源的 它的构件呢比open i的codex c i是要更好一点的。”&lt;/li&gt;
&lt;li&gt;“我认为学习它的这个仓库啊 工具的调用怎么做 这个agent还是非常有意义的。”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1nRKRzdEy9</guid>
      <pubDate>Thu, 26 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>GEMINICAI与GEMINI_Code_Assistant深度测评：功能、对比与实践指南</title>
      <link>https://www.bilibili.com/video/BV1nRKRzdEy9</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1nRKRzdEy9"&gt;同样是 AI 编程，Gemini CLI 不花钱还很强！&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;Google的GEMINICAI和GEMINI Code Assistant为AI编程工具领域带来了新的选择，本文深入评测了这两款工具，并与Claude Code、Cursor、Augment等竞品进行了功能和性能对比。文章详述了它们的安装、配置、使用技巧及实际操作中的优劣势。&lt;/p&gt;

&lt;p&gt;重要的概念包括：
- &lt;strong&gt;GEMINICAI&lt;/strong&gt;：一款高度模仿Claude Code的AI编程工具，对个人开发者免费，但功能细节和效率上仍有提升空间。
- &lt;strong&gt;GEMINI Code Assistant (Agent Mode)&lt;/strong&gt;：VS Code中的AI辅助编程模式，旨在处理多步骤复杂任务，需特定设置。
- &lt;strong&gt;MCP (Memory, Context, and Plugins/Tools)&lt;/strong&gt;：GEMINICAI的关键特性，支持集成谷歌搜索、图片/视频生成工具，并提供自定义配置。
- &lt;strong&gt;UO Mode (User Override Mode)&lt;/strong&gt;：一种模式，开启后会自动批准所有工具调用，简化交互，但部分用户偏好手动确认。
- &lt;strong&gt;Context Files (如Gemini.markdown, SETTINGS.JSON)&lt;/strong&gt;：用于配置GEMINI Code Assistant的特殊文件，可设置默认回复语言、定义工具等。&lt;/p&gt;

&lt;p&gt;主要观点：
1. &lt;strong&gt;GEMINICAI免费且文章写作能力突出，但在编程任务效率上与顶级竞品存在差距。&lt;/strong&gt;
    *   免费供个人开发者使用，每日最高调用1000次，每分钟60次。其文章写作能力受到好评。
    *   尽管免费且有谷歌支持，但在文件编辑速度和复杂任务处理上，GEMINICAI（不开UO模式）及GEMINI Code Assistant（Agent模式）表现不如Claude Code、Cursor等。例如，文中提及相同任务Claude Code约6分钟完成，GEMINICAI耗时约30分钟。此外，GEMINI Code Assistant在Agent模式下的上下文自动关联不佳，常需手动指定文件或目录。
2. &lt;strong&gt;GEMINI Code Assistant的Agent模式虽有进步，但在命令行文件操作方面仍显稚嫩。&lt;/strong&gt;
    *   Agent模式在处理多步骤复杂任务方面有所提升。
    *   作者在使用Agent模式创建Next.js项目时，工具在未明确确认下删除文件，或因冲突多次移除目录，表明其命令行操作和文件管理不如Cursor或Augment成熟。
3. &lt;strong&gt;部分谷歌工程师推荐GEMINI在复杂任务中先制定计划，且不倾向于启用UO模式。&lt;/strong&gt;
    *   谷歌工程师菲利普建议在复杂任务前先让GEMINI制定计划，许多用户也认为GEMINI的计划能力优于Claude Sonnet 4。
    *   菲利普不倾向于使用UO模式（自动批准所有工具调用），而是更倾向于拦截并重新提示，以获得更好的控制权。&lt;/p&gt;

&lt;p&gt;行动建议与操作指南：
1.  &lt;strong&gt;安装GEMINICAI&lt;/strong&gt;：使用&lt;code&gt;npm install -g @google/gemini-cli&lt;/code&gt;命令，然后输入&lt;code&gt;gem&lt;/code&gt;启动。
2.  &lt;strong&gt;登录与认证&lt;/strong&gt;：首次启动可能引导至网页认证。或通过&lt;code&gt;/ts&lt;/code&gt;命令选择谷歌账号登录以使用免费服务。若遇登录问题，可尝试先在VS Code中安装并登录Gemini Code Assistant。
3.  &lt;strong&gt;配置GEMINI Code Assistant&lt;/strong&gt;：在VS Code中，通过&lt;code&gt;command shift p&lt;/code&gt;选择“open user settings json”，在“Gemini code assistant”下方添加配置（如开启Agent模式）。在项目或用户主目录下创建&lt;code&gt;.gemini&lt;/code&gt;文件夹，并在其中放置&lt;code&gt;Gemini.markdown&lt;/code&gt;（用于全局提示词，如设置默认中文回复）和&lt;code&gt;SETTINGS.JSON&lt;/code&gt;文件（用于配置MCP工具、上下文文件、自动接受工具调用等），建议在项目开始前配置。
4.  &lt;strong&gt;上下文管理&lt;/strong&gt;：在Agent模式下，为确保上下文关联，建议使用&lt;code&gt;@&lt;/code&gt;命令指定整个项目目录或具体文件。可使用&lt;code&gt;/memory refresh&lt;/code&gt;强制重新扫描和加载上下文，&lt;code&gt;/memory show&lt;/code&gt;显示当前上下文。
5.  &lt;strong&gt;命令行交互&lt;/strong&gt;：&lt;code&gt;/help&lt;/code&gt;显示可用命令；感叹号&lt;code&gt;!&lt;/code&gt;前缀可在CUI内部与系统shell交互；&lt;code&gt;/&lt;/code&gt;单独输入可切换到shell模式；&lt;code&gt;?&lt;/code&gt;在终端可显示shell模式信息。
6.  &lt;strong&gt;运行参数&lt;/strong&gt;：使用&lt;code&gt;-m&lt;/code&gt;指定模型，&lt;code&gt;-p&lt;/code&gt;非交互式传递提示，&lt;code&gt;-s&lt;/code&gt;启用沙箱模式（沙箱内UO模式默认开启），&lt;code&gt;-d&lt;/code&gt;启用调试模式，&lt;code&gt;-a&lt;/code&gt;递归包含所有文件作为上下文，&lt;code&gt;-y&lt;/code&gt;启用UO模式自动批准工具调用。
7.  &lt;strong&gt;故障排除&lt;/strong&gt;：若出现“command not found”，请检查安装路径或系统PATH变量。
8.  &lt;strong&gt;高级使用示例&lt;/strong&gt;：
    *   指示GEMINICAI在特定目录写关于特定主题的文章。
    *   通过MCP调用AI图片生成工具生成网页资源。
    *   使用上下文文件（如&lt;code&gt;Gemini.markdown&lt;/code&gt;）设置默认回复语言。
    *   修复GitHub问题时，直接提供问题链接。
    *   为代码库添加功能时，提供代码库链接或路径。
    *   通过环境变量自定义系统提示词，如`GEMINI&lt;em&gt;SYSTEM&lt;/em&gt;PROMPT=&lt;/p&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1nRKRzdEy9</guid>
      <pubDate>Thu, 26 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>使用Augmenter_Code等AI工具加速Web开发与插件构建实战</title>
      <link>https://www.bilibili.com/video/BV1M8KDz4E92</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1M8KDz4E92"&gt;Augment + Claude 神仙组合！3个效率工具 Vibe Coding 全流程&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;Kajer分享了三个近期通过AI工具（尤其是Augmenter Code）快速开发的Web应用和插件，展示了AI在提升Web开发效率方面的强大能力。这些应用包括一个基于AI生成猫咪故事的Web应用、一个多功能浏览器插件（具备总结、内容转换、流程图生成功能），以及一个文章转推文的插件。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;重要概念：&lt;/strong&gt;
*   &lt;strong&gt;Web Coding&lt;/strong&gt;：文章中指代一种高度依赖AI工具、人类参与极少的Web开发模式，强调AI在代码生成、任务管理和调试中的核心作用。
*   &lt;strong&gt;Agent Automos&lt;/strong&gt;：Augmenter Code的一大优势，指其高度自动化能力，能够自行编写文件、运行命令，并在遇到错误时进行自我修复。
*   &lt;strong&gt;Augmenter Code&lt;/strong&gt;：一种高效的AI编程工具，特别适合Web Coding，能从提示词生成项目，管理复杂任务，并进行自我纠正。
*   &lt;strong&gt;Contest 7 / MCP (AI浮片生成)&lt;/strong&gt;：分别指用于文档搜索、应用生成和图像生成等特定任务的AI模型或工具。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主要观点：&lt;/strong&gt;
*   AI工具（如Augmenter Code）显著降低了人类在Web开发中的参与度，实现了极高的开发速度和效率，即便面对复杂应用和插件也能迅速完成。
    *   &lt;strong&gt;支撑：&lt;/strong&gt;“人的参与是非常少的。它很快就能帮我生成一个可运行，可预览，没有一些NestJ在左侧的各种包错问题。”
    *   &lt;strong&gt;支撑：&lt;/strong&gt;“用它来编写代码是要比我之前做一些应用要方便特别特别多，尤其适合Web Coding。”
    *   &lt;strong&gt;案例：&lt;/strong&gt;Augmenter Code仅凭少量提示，就完成了第一个应用的生成、风格修改、AI图片调用和布局调整；第二个插件的SDK升级、设置界面改动和新功能添加（如Mermaid图表），并进行了自我修复；第三个插件的任务创建、文件编写、命令执行及错误修正（如KV绑定、图标生成）。
*   AI工具能够有效地管理复杂的开发工作流，包括多任务处理、错误自修复以及自动生成辅助文档和测试。
    *   &lt;strong&gt;支撑：&lt;/strong&gt;Augmenter Code能创建“多个任务”，并在终端遇到错误时“自己去修复”，这体现了其“Agent Automos”的高度自动化优势。
    *   &lt;strong&gt;支撑：&lt;/strong&gt;它利用“上下文引擎”精准定位并修复bug，并能生成“多个测试的文档还有脚本”以及“多个中间文档关于部署的总结”。
*   结合特定领域的AI模型或MCP（如PrayWriter、图片AI生成MCP）能显著增强开发过程中的特定功能和效率。
    *   &lt;strong&gt;支撑：&lt;/strong&gt;“PrayWriter MCP这个MCP非常好用强烈推荐大家安装。”
    *   &lt;strong&gt;支撑：&lt;/strong&gt;“图片的AI生成MCP也非常好用也推荐大家去用。”
*   部分AI模型（如Gemlite 2.5 Flash）提供慷慨的免费调用额度，降低了AI辅助开发的门槛。
    *   &lt;strong&gt;支撑：&lt;/strong&gt;“Gemlite呢比较慷慨这三个模型呢都有免费调用的额度比如2.5 Flash每天呢你最多可以调用500次。”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;行动建议/操作指南：&lt;/strong&gt;
*   在Web开发中，尝试使用Augmenter Code等AI工具，特别是对于使用NestJS、React、Telvin等现代技术栈的项目，以提高开发速度。
*   考虑结合Contest 7与Augmenter Code进行开发，利用其快速查找和应用最新技术文档的能力。
*   在开发过程中安装并使用“PrayWriter MCP”进行测试和调试，以提高效率。
*   在使用AI生成图标时，建议初期只生成一张，然后通过脚本转换为不同尺寸，以保持一致性。
*   为提升“Web Coding”效率，可尝试同时开启多个工作窗口进行操作。
*   探索UI输入框架的“Remote Agent”功能，进一步提高开发效率。
*   加入作者的知识星球，获取最新的AI资讯、源代码和Q&amp;amp;A。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;金句：&lt;/strong&gt;
*   “现在Webcoding的效率是要蹭蹭蹭的往上涨的。”
*   “我呢现在是习惯开多个窗口在一起Webcoding这样效率是倍增。”
*   “Augumenter是我最近非常非常喜欢的工具。”
*   “用它来编写代码是要比我之前做一些应用要方便特别特别多，尤其适合Web Coding。”&lt;/p&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1M8KDz4E92</guid>
      <pubDate>Wed, 25 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>Kimi深度研究能力深度评测：对比OpenAI，揭秘可视化报告与Agent模型</title>
      <link>https://www.bilibili.com/video/BV1SdKgzjE84</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1SdKgzjE84"&gt;Kimi「深度研究」首发实测，可视化报告惊艳！模型即 Agent&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本次评测通过8个具体案例，深入分析了Kimi深度研究的能力、用户体验及其底层技术，并将其与OpenAI的Deep Research进行了对比。文章重点介绍了Kimi精美的可视化报告，以及其基于端到端强化学习训练的Agent模型。&lt;/p&gt;

&lt;p&gt;重要的概念与解释：
*   &lt;strong&gt;Kimi深度研究/OpenAI Deep Research&lt;/strong&gt;：这是一种AI驱动的深度研究工具，能够自主规划、执行任务，并通过搜索和调用工具来生成详细的报告。它们能够协助用户进行复杂的主题研究，并产出结构化、可视化的报告。
*   &lt;strong&gt;Agent模型（端到端强化学习）&lt;/strong&gt;：这是一种先进的模型训练方法。与传统Agent依赖预设流程或监督微调不同，端到端强化学习让模型从零开始自主学习和识别错误，将整个任务视为一个整体来掌握，从而更好地应对复杂的推理、工具切换和环境变化，具备更强的泛化能力。
*   &lt;strong&gt;可视化报告&lt;/strong&gt;：指AI生成的报告不仅包含文字内容，还融入了目录、执行摘要、关键发现、门妹图（Mind Map）、流程图等丰富的视觉元素，排版精美，大大提升了报告的可读性和用户体验，使其比纯文字堆砌的报告更易于理解和消化。&lt;/p&gt;

&lt;p&gt;主要观点：
1.  Kimi的深度报告具备精美的可视化能力，包括目录导航、执行摘要、关键发现、门妹图（Mind Map）等，显著提升了报告的可读性和用户体验。
    *   &lt;strong&gt;案例支撑&lt;/strong&gt;：在欧盟AI法案对比、旅行规划、供应链追踪等多个测试案例中，Kimi均生成了排版精美的可视化报告，如门妹图和流程图，这些图表使得复杂信息一目了然。
2.  Kimi的深度研究过程与OpenAI类似，均具备反问用户以澄清需求的能力，且在搜索和工具调用上表现出色。
    *   &lt;strong&gt;案例支撑&lt;/strong&gt;：Kimi在生成报告前会反问以确认需求，并能实时展示搜索过程，平均每个任务规划70多个关键词，找到200多个网址，并能调用浏览器、Pathom等多种工具。
3.  在某些能力评估维度，Kimi的表现甚至超越了JAMP9的深度研究，并在部分维度上与OpenAI的深度研究持平或略优。
    *   &lt;strong&gt;数据支撑&lt;/strong&gt;：评测结果显示，Kimi在“人类最后测试”等维度得分高于JAMP9，且在某些方面达到或略高于OpenAI的水平。
4.  Kimi的底层技术是端到端强化学习训练的Agent模型，使其能够自主规划、识别错误，并适应复杂任务，而非仅仅依赖预设流程。
    *   &lt;strong&gt;逻辑支撑&lt;/strong&gt;：这种训练方式让模型能够将整个任务当做一个整体去学习，从而在推理、工具切换和环境变化方面展现出更强的适应性和泛化能力。
5.  尽管表现出色，Kimi在某些特定任务上获取信息可能不完整，或在反问的细致度上与OpenAI存在差距。
    *   &lt;strong&gt;案例支撑&lt;/strong&gt;：在“国内机票价格统计检验”测试中，Kimi表示信息不完整并使用模拟数据，而OpenAI能更细致地反问机场选择、回程时间规则等，并能通过Python处理真实数据。&lt;/p&gt;

&lt;p&gt;行动建议：
1.  若要体验Kimi的最新功能，建议直接在其官方网站进行申请。
2.  在向AI深度研究工具提问时，积极利用其反问功能，以更精确地定义需求，从而提高研究效率和报告质量。&lt;/p&gt;

&lt;p&gt;金句：
*   “你做深度研究真的不是说你文字内容越来越多好，而是说你回答了这个问题是否精准，推理是否到位。”
*   “端到端是让模型从零自主识错，将整个任务当做一个整体去学，应对复杂的推理、工具切换和环境变化。”&lt;/p&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1SdKgzjE84</guid>
      <pubDate>Tue, 24 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>Tor网络深度指南：隐藏踪迹、访问暗网与高级代理配置</title>
      <link>https://www.youtube.com/watch?v=lOLJ70bc-pA</link>
      <description>&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=lOLJ70bc-pA"&gt;【极致隐私】给你的节点加上暗网功能，被误解的tor网络，完全免费的三重"链式代理"，普通浏览器上暗网，前置代理+tor+后置代理的配置方法｜黑暗网络｜tor网络｜洋葱路由&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本教程详细介绍了如何利用Tor网络隐藏个人网络踪迹、访问暗网，并澄清了Tor并非仅限于非法活动的误解。文章深入讲解了Tor的三层链式代理工作原理，并提供了通过Xray和NekoBox等工具配置Tor网络的具体操作指南，甚至涵盖了如何搭建暗网服务和解决Tor出口IP“脏”问题的高级后置代理方案。&lt;/p&gt;

&lt;h3&gt;重要的概念&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Tor网络（Tor Network）&lt;/strong&gt;：一个全球志愿者搭建的免费三层链式代理网络，旨在保护用户隐私和匿名通信，不法分子利用暗网进行非法活动并非Tor本身的问题。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;案例&lt;/strong&gt;：文章通过形象的类比，将Tor网络比作三层洋葱，数据经过三次加密，依次通过三个中继节点（首位节点、中间节点、出口节点），每个节点只解密一层数据，无法得知完整信息，从而实现匿名。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;暗网（Dark Web）&lt;/strong&gt;：Tor网络众多应用中的一种，主要通过&lt;code&gt;.onion&lt;/code&gt;域名访问，提供高度匿名的服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表网（Clearnet）&lt;/strong&gt;：指常规的互联网，与暗网相对。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;后置代理（Dialproxy/Post-proxy）&lt;/strong&gt;：一种高级代理配置，用于解决Tor网络出口IP通常是高风险IP的问题。它将Tor网络的出口流量再通过一个“干净”的代理（如住宅IP）转发出去，使外部服务看到的IP是“干净”的代理IP而非Tor出口IP。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;案例&lt;/strong&gt;：文章演示了将TorUser节点的出口改为另一个Vmess或Socks代理节点，使得最终落地IP是VPS或住宅IP，从而在对外访问时隐藏了VPS的真实IP地址，并避免了Tor出口IP带来的各种限制。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Tor网络并非仅用于非法活动，其核心价值在于保护用户隐私和匿名通信。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支撑&lt;/strong&gt;：爱德华·斯诺登曾多次公开推荐Tor；Tor不仅能访问暗网，也能访问表网，还能代理SSH、FTP等其他TCP流量，甚至比特币钱包也支持Tor配置。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;即便Tor网络能完美隐匿行踪，不当操作仍可能导致数据泄露。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支撑&lt;/strong&gt;：强调教程仅供技术交流，警告用户“请勿以身试法”，因为“你的数据会因为你的各种不当操作而从Tor网络中泄露出去”。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通过Tor网络访问表网时，出口IP通常是高风险IP，可能导致访问受限或频繁验证。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支撑&lt;/strong&gt;：文章展示IP评分结果为0，风险程度100%，并检测出是Tor节点；访问表网时常需进行烦人的人机验证。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;即使入口和出口都是同一个VPS的IP，通过Tor网络转一圈也能达到隐藏真实身份的目的。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支撑&lt;/strong&gt;：通过后置代理配置，虽然最终落地IP是VPS的IP，但数据在中间确实经过了Tor网络，隐藏了用户与VPS的直接连接，使外部服务无法直接追踪到用户。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安卓手机通过普通浏览器访问暗网时，需要开启FakeIP模式以解决DNS解析问题。&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支撑&lt;/strong&gt;：解释了手机默认的Turnal模式无法解析暗网域名导致报错，而FakeIP模式能将暗网域名交给节点处理，再转发到Tor网络。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;行动建议与操作指南&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用Tor隐藏网络踪迹与访问暗网：&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;搭建普通节点：&lt;/strong&gt; 在VPS上安装XUI面板，配置并测试一个SS节点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安装Tor服务：&lt;/strong&gt; 在VPS上执行&lt;code&gt;sudo apt install tor&lt;/code&gt;安装，并确认Tor在9050端口启动Stocks代理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置Xray路由（仅暗网流量走Tor）：&lt;/strong&gt; 在Xray出站规则添加Tor入口（协议SOX，地址&lt;code&gt;localhost:9050&lt;/code&gt;），然后在路由规则添加&lt;code&gt;domain:onion&lt;/code&gt;，出站选择Tor。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置Xray路由（所有流量走Tor）：&lt;/strong&gt; 为SS节点添加客户端并命名为&lt;code&gt;Toruser&lt;/code&gt;，在路由规则中添加用户&lt;code&gt;Toruser&lt;/code&gt;，出站选择Tor。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通过后置代理解决Tor出口IP“脏”的问题：&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;添加一个后置代理节点（如Vmess或Socks5住宅IP）。&lt;/li&gt;
&lt;li&gt;编辑该节点，启用Socket选项，Dialproxy选择Tor。&lt;/li&gt;
&lt;li&gt;修改TorUser节点的出口，将其更改为该后置代理节点。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安卓手机通过普通浏览器访问暗网：&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;将节点导入NekoBox。&lt;/li&gt;
&lt;li&gt;进入NekoBox设置，启用FakeDNS（FakeIP）模式。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;搭建自己的暗网网站：&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;修改&lt;code&gt;/etc/tor/torrc&lt;/code&gt;文件，取消注释&lt;code&gt;HiddenServiceDir&lt;/code&gt;和&lt;code&gt;HiddenServicePort&lt;/code&gt;，并设置端口映射（如&lt;code&gt;HiddenServicePort 80 127.0.0.1:80&lt;/code&gt;或XUI面板端口）。&lt;/li&gt;
&lt;li&gt;重启Tor服务：&lt;code&gt;sudo systemctl restart tor&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;查看暗网域名：&lt;code&gt;sudo cat /var/lib/tor/hidden_service/hostname&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用浏览器访问获取的暗网域名（注意HTTP/HTTPS协议）。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“虽说Tor网络可以完美引力你在网络上的行踪但你的数据会因为你的各种不当操作而从Tor网络中泄露出去请勿以身试法”&lt;/li&gt;
&lt;li&gt;“在这个由志愿者组成的去中心化网络想要追踪你几乎是不可能的”&lt;/li&gt;
&lt;li&gt;“有些朋友可能有疑问入口是vps的IP出口又是vps的IP那为啥我不直接访问还要到Tor网络里面转一圈在降低网速吗有没有用的话先放一遍你就说这操作溜不溜吧”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.youtube.com/watch?v=lOLJ70bc-pA</guid>
      <pubDate>Thu, 19 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>BBGPT：AI赋能音视频知识管理与创作的实践</title>
      <link>https://www.bilibili.com/video/BV1cANJzDE3S</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1cANJzDE3S"&gt;AI 视频知识管理：看得快、搜得到、用得好，如何利用 BibiGPT 收集、整理、输出？&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;BBGPT是一款AI辅助工具，旨在提升用户在消费、管理和创作音视频内容时的效率与体验。它通过自动化捕获、智能整理和多样化输出，帮助用户从海量视频中快速获取知识并转化为实际成果。文章以Tiago的CODE框架为参照，系统性地介绍了BBGPT在个人知识管理中的应用。&lt;/p&gt;

&lt;h3&gt;重要概念及解释&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CODE框架&lt;/strong&gt;: 文章引用Tiago的CODE框架（Capture捕获、Organize整理、Distill提炼、Express表达），指出BBGPT旨在增强用户的“第一大脑”，而非直接取代“第二大脑”，强调AI在知识管理流程中的辅助作用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MCP (Managed Capabilities Protocol) 管理能力协议&lt;/strong&gt;: 一种未来AI与工具交互的设想。AI大模型不再需要为每个工具硬编码接口，而是由工具提供方（Provider）自行描述其能力规范（如“获取天气”、“获取经纬度”），AI则根据这些规范自由组合和调度工具，实现复杂任务。这使得工具集成和AI功能扩展更为灵活。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能体 (Agents)&lt;/strong&gt;: 提及未来会将目前的“提示词”升级为“智能体”，它们不仅是提示词，还包含工具包（Function Call, NCP Server集成），能与本地数据交互，甚至调度其他Agents（如搜索、下载），以更智能、一步到位地完成复杂任务，实现“结果交付”。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;知识捕获应尽可能降低阻力&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;通过浏览器插件、微信助理、桌面客户端的多文件导入和文件夹监控等功能，实现音视频内容的一键或自动收集，无需手动干预。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;知识整理应最大化AI自动化&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;AI自动进行内容总结、标签提取，并可自动保存到Notion等笔记软件，大大降低了人工整理的成本，让用户将精力集中在内容消化和再加工上。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI应帮助实现“知行合一”&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;将收集和整理的知识直接转化为工作或生活所需的“产物”（如报告、脚本、文章），而不是仅仅停留在学习阶段。这代表了知识的“增值加工”。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;个性化总结与输出至关重要&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;同一个视频内容，用户可以根据自己的目的和兴趣（商业模式、技术实现等），通过自定义提示词，让AI生成不同形式的输出（推特文案、PPT、科技文章等），实现高度定制化。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;人机配合是当前最优解&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;尽管AI能力强大且不断发展，但目前最推荐的方式仍是人类自定义提示词，让AI进行初步处理和辅助，人类再进行深度理解、创造性加工和决策。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;行动建议/操作指南&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;内容收集&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;网页版：直接粘贴视频链接。 &lt;/li&gt;
&lt;li&gt;浏览器插件（AirWatch Later）：一键收藏B站、YouTube等视频至BBGPT后台自动总结。 &lt;/li&gt;
&lt;li&gt;微信助理：通过微信分享任意APP内的链接，实现移动端快速收集。 &lt;/li&gt;
&lt;li&gt;桌面客户端：支持本地多选文件导入，可监控指定文件夹自动处理音视频文件（如直播录屏、下载的网课），并支持解析网页下载链接。 &lt;/li&gt;
&lt;li&gt;快捷键：Command + J快速打开添加窗口，Command + K快速搜索。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内容整理&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;利用BBGPT自动生成的总结和字幕列表进行查看。&lt;/li&gt;
&lt;li&gt;将内容自动保存到Notion、Obsidian、Roam Research等笔记软件进行二次加工和Remix。&lt;/li&gt;
&lt;li&gt;在BBGPT内创建合集（如“AI创业”、“WWDC2025”）进行主题分类管理。 &lt;/li&gt;
&lt;li&gt;播放时可插入时间戳（Ctrl+T）并摘抄重点句，实现边看边整理。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内容应用&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;使用自定义总结功能，输入提示词将视频内容转化为推特文案、小红书文案、公众号文章、PPT等。&lt;/li&gt;
&lt;li&gt;利用高级模型进行多版本输出或更精进的表达。 &lt;/li&gt;
&lt;li&gt;通过“截图问一问”功能，截取视频画面提问。&lt;/li&gt;
&lt;li&gt;导出字幕时，可自定义字幕样式（颜色、背景、字体大小）并重新压制视频。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内容搜索&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;在单个视频内搜索字幕（支持中英翻译后搜索）。 &lt;/li&gt;
&lt;li&gt;全局搜索整个BBGPT内容库中所有相关关键词的视频。 &lt;/li&gt;
&lt;li&gt;使用“开放AI搜索”功能，进行跨平台（B站、YouTube）视频搜索，扩展知识广度，并基于搜索结果获得相关结论。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;产品支持&lt;/strong&gt;: 
&lt;ul&gt;
&lt;li&gt;关注618优惠活动，考虑购买试用。 &lt;/li&gt;
&lt;li&gt;永久会员将下架，之前会员金额可抵扣。 &lt;/li&gt;
&lt;li&gt;通过“反馈建议”和“看板”功能向开发者提出建议、投票决定开发顺序。&lt;/li&gt;
&lt;li&gt;成为付费用户后可获得邀请链接，推荐朋友获得奖励。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“让你的音视频可以看得快、搜得到、用得好。”&lt;/li&gt;
&lt;li&gt;“让AI尽可能的降低人的整理成本。”&lt;/li&gt;
&lt;li&gt;“功能多是一方面但是有可能功能多反而是一种噪音。”&lt;/li&gt;
&lt;li&gt;“未来一定是结果交付的，并且AI它交付的就是你的结果。”&lt;/li&gt;
&lt;li&gt;“知行合一就是我们学习知识并且直接产出知识，这个知识已经是通过你加工整理过的。”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1cANJzDE3S</guid>
      <pubDate>Wed, 18 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>BBGPT：AI赋能音视频知识管理，如何看得快、搜得到、用得好</title>
      <link>https://www.bilibili.com/video/BV1cANJzDE3S</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1cANJzDE3S"&gt;AI 视频知识管理：看得快、搜得到、用得好，如何利用 BibiGPT 收集、整理、输出？&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;文章详细介绍了BBGPT，一款AI辅助音视频知识管理工具，旨在帮助用户高效地消费、整理和利用大量视频内容。它通过多种方式实现视频内容的快速捕获、智能整理和高效输出，最终达到“知行合一”的知识应用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;重要概念：&lt;/strong&gt;
*   &lt;strong&gt;M.C.P. (Model-Controlled Provider)：&lt;/strong&gt; 一种新的技术范式，与传统API调用相反。它允许功能提供方（如BBGPT、Notion）定义自身能力，然后由AI模型根据用户需求自由组合和调用这些工具来完成任务。
*   &lt;strong&gt;智能体 (Agent)：&lt;/strong&gt; 作者展望未来AI将从简单的提示词升级为智能体，它不仅包含提示词，还整合工具包，能执行更复杂的任务，甚至调度其他AI服务。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主要观点：&lt;/strong&gt;
*   &lt;strong&gt;AI旨在增强而非取代第一大脑：&lt;/strong&gt; 任何AI工具都无法完全替代人类的“第二大脑”，其核心价值在于辅助和增强人类自身的认知与处理能力。
*   &lt;strong&gt;整理应最大化AI自动化，降低人为干预：&lt;/strong&gt; 未来的知识管理应尽可能减少人工介入，让AI主动完成分类、打标签和个性化总结等任务，以降低整理成本。
    *   例如，通过AI创建“智能合集”，根据视频内容自动筛选和归类，而非手动操作。
*   &lt;strong&gt;知识的终极目标是转化为可行动的产物：&lt;/strong&gt; 学习知识的最终目的是将其应用于实践，直接产出报告、脚本、文章等成果，实现“知行合一”。
    *   文章类比了猪肉加工增值的过程，强调经过加工整理的知识如同增值商品，更具实用价值。
*   &lt;strong&gt;AI模型将日益趋向Agent化：&lt;/strong&gt; 大模型本身会内置更多工具，并具备更强的自主调度能力，能够像通用助理一样执行复杂任务。
*   &lt;strong&gt;永久会员制即将取消：&lt;/strong&gt; 由于运营成本的持续增长和对现金流健康的考量，BBGPT将取消永久会员模式，转为按月/年订阅，以确保至少7年以上的持续运营。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;行动建议或操作指南：&lt;/strong&gt;
*   &lt;strong&gt;捕获 (Capture)：&lt;/strong&gt;
    *   直接在BBGPT网页版粘贴视频链接进行总结。
    *   使用浏览器插件“AirWatch Later”快速批量收藏视频（如B站、YouTube）。
    *   移动端通过微信助理分享链接，几乎支持所有App内容的快速收集。
    *   桌面客户端支持多选本地视频文件，并可监控指定文件夹自动导入和处理新文件（如直播录屏、网课下载）。
    *   利用“猫抓”等工具解析网页中的音视频链接，并导入BBGPT。
    *   桌面客户端快捷键：&lt;code&gt;Command + J&lt;/code&gt; 快速打开添加窗口，&lt;code&gt;Command + K&lt;/code&gt; 快速搜索。
*   &lt;strong&gt;整理 (Organize)：&lt;/strong&gt;
    *   将总结内容自动保存至Notion、Roam Research等外部笔记软件。
    *   在BBGPT内创建合集（如“AI创业”），按主题汇总视频。
    *   通过全局搜索功能，快速查找资料库中所有相关视频（支持中文翻译后的英文内容搜索）。
    *   利用“开放AI搜索”功能，跨平台（B站、YouTube）搜索并推荐相关视频，拓展知识广度。
*   &lt;strong&gt;输出与应用 (Distill &amp;amp; Express)：&lt;/strong&gt;
    *   自定义总结功能，根据特定提示词生成如短视频脚本、小红书文案、推特文案等多元内容。
    *   利用AI辅助视频制作（如自动生成脚本、字幕校对、文案输出）。
    *   通过“截图问一问”功能，截取视频画面提问或进行标注（如识别公式、提问画面内容）。
    *   未来将提供专业文章生成、直接对话等功能，基于收集的知识直接产出工作生活所需成果。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;金句：&lt;/strong&gt;
*   “没有任何AI工具能够取代你成为第二大脑我更多的是想通过AI来增强我们的第一大脑”
*   “知行合一就是我们学习知识并且直接敞出知识这个知识已经是通过你加工整理过的”
*   “看得快就是微快不破让你可以从任何的平台任何的视频链接视频载体都可以收集和处理”
*   “反常识的观点才会更有价值”
*   “我觉得整理这件事情不应该是人为去做过多的干预或者是操作了应该让AI尽可能的降低人的整理成本”&lt;/p&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1cANJzDE3S</guid>
      <pubDate>Wed, 18 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>BBGPT深度解析：AI赋能音视频知识管理，实现看得快、搜得到、用得好</title>
      <link>https://www.bilibili.com/video/BV1cANJzDE3S</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1cANJzDE3S"&gt;AI 视频知识管理：看得快、搜得到、用得好，如何利用 BibiGPT 收集、整理、输出？&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;文章详细介绍了BBGPT这款AI音视频知识管理工具，旨在帮助用户高效消费、整理和利用海量音视频内容。它通过多种便捷的收集方式、AI驱动的整理功能以及面向结果的知识输出，来增强用户的第一大脑，实现知行合一。BBGPT致力于让用户在快节奏的信息洪流中，能够看得快、搜得到、用得好。&lt;/p&gt;

&lt;h3&gt;重要概念及解释&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;增强第一大脑&lt;/strong&gt;：区别于传统“第二大脑”概念，BBGPT的理念是AI工具不应取代用户的核心认知能力，而是通过自动化和智能化处理，增强用户原有的大脑处理信息、积累知识的效率和广度。例如，BBGPT将各类音视频信息源汇聚并自动处理，辅助用户将消化后的内容整合到个人笔记软件中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能体（Agents）&lt;/strong&gt;：这是BBGPT在“用得好”阶段的未来愿景，即AI不再仅仅是执行预设提示词的工具，而是能够集成各种功能（如Function Call、NCP Server），与本地数据交互，甚至调度其他Agent（如搜索、下载）以直接达成用户目标。这标志着AI能力从单纯的问答向主动执行任务的转变。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NCP（Control Inversion / 控制反转）&lt;/strong&gt;：这是一种创新的工具集成和API调用思路。传统模式是BBGPT主动集成其他工具（如Notion、Tana的导出功能），NCP则是让第三方工具（如Notion、Tana）提供自己的“规范”或服务接口，BBGPT的AI根据这些规范自由组合调用工具，从而极大地减少了BBGPT开发者为每一个功能做特定集成的负担，实现了更灵活、自动化的工作流。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AI工具应增强第一大脑而非取代第二大脑&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;支持：任何AI工具都无法完全取代人脑，其核心价值在于辅助和提升人的认知效率。&lt;/li&gt;
&lt;li&gt;案例：BBGPT并非要成为完整的第二大脑，而是帮助用户消化内容、积累知识到自己的笔记软件中，从而增强第一大脑。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;音视频内容收集应追求“微快不破”，最大限度降低用户阻力&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;支持：通过多样化的便捷入口和异步处理，减少用户收集内容的摩擦成本。&lt;/li&gt;
&lt;li&gt;案例：提供浏览器插件（如Air Watch Later一键收藏）、微信助理快速分享、桌面客户端监控文件夹自动导入等方式，用户只需简单操作即可完成内容收集，后续处理由后台自动完成。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;知识的整理应尽量实现“AI原生”，降低人为干预成本&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;支持：AI应主动、自动化地进行内容分类、汇总和筛选，减轻用户的整理负担。&lt;/li&gt;
&lt;li&gt;案例：未来将朝向智能问答机器人发展，如用户提问“我想看同学的最新视频”，AI能自动汇总并告知；或根据特定标签自动生成智能合集。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;知识的“用得好”在于结果交付，实现真正的“知行合一”&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;支持：学习知识的最终目的是将其转化为具体行动或产物，从而创造价值。&lt;/li&gt;
&lt;li&gt;类比：如同猪肉经过屠宰、切割、烹饪等加工环节后增值成为菜品，学习的知识也需经过加工整理才能成为有价值的产物，实现从“知”到“行”的转化。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI与模型的未来是Agent化与NCP化&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;支持：AI模型将内置更多工具和能力，并采用NCP模式与外部服务协作，实现更高效、更灵活的任务执行。&lt;/li&gt;
&lt;li&gt;案例：用户只需提出需求（如“将字幕改写成文章并存入Notion”），AI即可通过调用BBGPT的字幕工具和Notion的NCP服务，自动完成整个流程。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;行动建议与操作指南&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;多样化收集音视频内容到BBGPT&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;网页版&lt;/strong&gt;：直接复制视频链接到BBGPT进行总结。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;浏览器插件（推荐）&lt;/strong&gt;：安装“Air Watch Later”插件，在B站、YouTube等视频页面右下角点击WL按钮或右键菜单选择“Air Watch Later”，即可快速收藏并后台自动总结。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;移动端（推荐）&lt;/strong&gt;：将网页链接或视频链接分享/转发到BBGPT微信助理（企业微信号），自动同步至BBGPT列表。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;桌面客户端&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;支持本地多选音视频文件上传。&lt;/li&gt;
&lt;li&gt;设置“自动导入”功能，监控指定文件夹，新增文件将自动处理。&lt;/li&gt;
&lt;li&gt;支持直接解析下载链接进行处理。&lt;/li&gt;
&lt;li&gt;使用快捷键&lt;code&gt;Command + J&lt;/code&gt;快速打开添加窗口，&lt;code&gt;Command + K&lt;/code&gt;进行全局搜索。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;整理与利用已收集内容&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;导出到笔记软件&lt;/strong&gt;：可将总结内容自动保存到Notion、Readwise Reader、Roam Research等，便于二次加工和知识Remix。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;创建合集&lt;/strong&gt;：在BBGPT内创建自定义合集（如“AI创业”），统一管理特定主题的视频，可选择公开分享。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;细致笔记&lt;/strong&gt;：在播放视频时，点击Control + T（或相关图标）插入当前时间戳，并可直接摘抄对应的字幕内容，方便记录亮点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;字幕对照与跳转&lt;/strong&gt;：播放器字幕同步滚动，点击字幕可直接跳转到视频对应时间点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自定义总结&lt;/strong&gt;：通过预设或自定义提示词，让AI根据个性化需求生成特定格式内容（如推特文案、小红书文案、科技文章等）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高级搜索与发现&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;视频内搜索&lt;/strong&gt;：直接搜索视频字幕内容，支持中英文及翻译后字幕的搜索，精准定位信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全局搜索&lt;/strong&gt;：在资源库列表进行关键词筛选或全局搜索，查找所有与关键词相关的视频内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开放AI搜索&lt;/strong&gt;：当本地库中无相关视频时，可进行跨平台（如B站、YouTube）的AI搜索，获取外部视频推荐及总结，扩展知识广度。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“没有任何AI工具能够取代你成为第二大脑，我更多的是想通过AI来增强我们的第一大脑。”&lt;/li&gt;
&lt;li&gt;“微快不破，我们就尽可能的降低阻力。”&lt;/li&gt;
&lt;li&gt;“整理这件事情不应该是人为去做过多的干预或者是操作了，应该让AI尽可能的降低人的整理成本。”&lt;/li&gt;
&lt;li&gt;“知的行助理做到知行合一，我们学的知识最终也是要用起来的。”&lt;/li&gt;
&lt;li&gt;“理解越深，能力越强。”&lt;/li&gt;
&lt;li&gt;“反常识的观点才会更有价值。”&lt;/li&gt;
&lt;li&gt;“只有更简洁大家用起来才爽嘛，现在功能多是一方面但是有可能功能多反而是一种噪音。”&lt;/li&gt;
&lt;li&gt;“未来一定是结果交付的，并且AI它交付的就是你的结果，而知行合一就是我们学习知识并且直接产出知识，这个知识已经是通过你加工整理过的。”&lt;/li&gt;
&lt;li&gt;“我希望能够通过一些寓教娱乐的方式把视频内容以一种更轻松的展现出来。”&lt;/li&gt;
&lt;li&gt;“核心的区别就在于以前我是需要自己一个一个去实现这里的提示词，那么如果说像Notion、Tana其实他们都自己提供自己的NCP服务，然后我这边也提供相关的视频的字幕的相关工具，那么AI可以借助这些工具自由去组合，然后你就只需要在这边设定好，我一获取到字幕就要改写成文章并且存到Notion，整个链路就这样打通了。”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1cANJzDE3S</guid>
      <pubDate>Wed, 18 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>基于Define与飞书及大模型OCR构建批量发票扫描系统</title>
      <link>https://www.bilibili.com/video/BV1xuNEzoEEf</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1xuNEzoEEf"&gt;11-基于Dify快速构建批量发票扫描系统&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本文介绍了如何利用Define流程管理平台、飞书电子表格以及大模型OCR技术，构建一套自动化的批量发票扫描系统。该系统旨在解决传统人工发票报销流程中效率低下、错误率高、数据利用率差和财务决策迟滞等痛点，实现发票信息的快速、准确识别与结构化入库。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;重要概念：&lt;/strong&gt;
*   &lt;strong&gt;批量发票扫描系统：&lt;/strong&gt; 指利用AI技术自动识别并处理多张发票的系统，将非结构化的发票图像信息转化为可编辑、可分析的结构化数据，实现批量录入和管理。
*   &lt;strong&gt;Define流程 + 大模型OCR：&lt;/strong&gt; Define是实现工作流自动化管理的平台，结合多模态大模型的OCR（光学字符识别）能力，能够智能地从发票图片中提取关键信息。飞书电子表格则作为数据存储和展示的载体，实现了发票信息的自动归档。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主要观点：&lt;/strong&gt;
*   &lt;strong&gt;效率显著提升：&lt;/strong&gt; 相较于人工处理发票每张耗时几十秒至数分钟且量大时效率低下，自动化系统可在数分钟内同时识别并录入数十张发票，大幅缩短处理时间。
    *   &lt;strong&gt;支撑：&lt;/strong&gt; “处理一张发票呢时长耗时耗时短则几十秒多则数分钟，量大的时候呢就会成为一个无底洞”；“数十张发票可以同时的进行识别，只需要短短的数十秒几分钟就可以完成食品和录入”。
*   &lt;strong&gt;准确率高且干预少：&lt;/strong&gt; 人工录入易出错且纠错成本高，而自动化系统凭借大模型的高准确率，能最大程度减少人工干预，降低错误率。
    *   &lt;strong&gt;支撑：&lt;/strong&gt; “员工在输入的时候呢，难免会出现一些问题，一旦出现类似的一些问题的话，那在我们进行一些复查的时候就更会耗费人的精力”；“高准确率，员工可以尽量少进行干预”。
*   &lt;strong&gt;数据结构化利用率高：&lt;/strong&gt; 手工登记数据格式不统一导致难以统计分析，自动化系统能将发票信息转化为标准字段，直接入库飞书表格，便于后续分析。
    *   &lt;strong&gt;支撑：&lt;/strong&gt; “手工登记的数据格式不统一，无法直接用于统计和分析”；“实现一个结构化的自动入库，将散乱的这种发票信息转化为标准的字段，直接登记到我们的飞书表格里，有利于我们后续的一个分析和处理”。
*   &lt;strong&gt;财务决策支持透明清晰：&lt;/strong&gt; 传统方式数据流动缓慢导致流程滞后，自动化系统提供透明清晰的数据支持，加速财务决策。
    *   &lt;strong&gt;支撑：&lt;/strong&gt; “财务决策迟滞，传统方式呢数据流动缓慢，导致后续的一些流程也进行了一个滞后”。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;操作指南：&lt;/strong&gt;
1.  &lt;strong&gt;环境准备：&lt;/strong&gt;
    *   &lt;strong&gt;飞书电子表格处理：&lt;/strong&gt;
        *   在DEFI平台安装飞书电子表格插件。
        *   在飞书后台创建自建应用（如“表格测试”），获取App ID和App Secret。
        *   在自建应用中配置权限管理，添加表格相关权限。
        *   在版本管理与发布中创建并发布版本。
    *   &lt;strong&gt;创建表格并关联自建应用：&lt;/strong&gt;
        *   预先配置飞书表格，字段与发票提取要素吻合。
        *   删除表格中除第一行字段信息外的所有行，只保留字段标题行。
        *   在飞书表格中，点击“更多”-&gt;“添加文档应用”，搜索并添加已创建的自建应用，完成表格与应用的关联。
    *   &lt;strong&gt;DEFI关联飞书自建应用：&lt;/strong&gt; 在DEFI飞书插件界面输入自建应用的App ID和App Secret。
    *   &lt;strong&gt;安装PDF处理插件：&lt;/strong&gt; 在DEFI中安装PDF处理插件，用于将PDF文件转换为图片格式。
2.  &lt;strong&gt;工作流节点配置：&lt;/strong&gt;
    *   &lt;strong&gt;开始节点：&lt;/strong&gt; 增加输入字段“文件列表” (变量名&lt;code&gt;fail&lt;/code&gt;)，用于上传发票文件（PDF或其他格式）。
    *   &lt;strong&gt;迭代节点：&lt;/strong&gt; 输入来源于开始节点的文件列表，用于逐个处理多张发票。
    *   &lt;strong&gt;PDF转PNG转换器：&lt;/strong&gt; 将PDF发票文件转换为图片格式，以便大模型识别。
    *   &lt;strong&gt;模型节点：&lt;/strong&gt;
        *   选用多模态大模型（如“千万2.5的72B多模态模型”）。
        *   在提示词中定义角色，明确发票关键字段及输出格式，并启用OCR识别功能。
        *   输入为PDF转PNG转换器的输出（图片）。
    *   &lt;strong&gt;代码执行节点：&lt;/strong&gt;
        *   输入来源于模型节点的输出。
        *   通过代码对提取内容进行格式统一和转换，输出为数组格式字符串，以符合飞书表格的录入要求。
    *   &lt;strong&gt;飞书电子表格节点：&lt;/strong&gt;
        *   选择“新增多行制工作表”功能。
        *   在“电子表格”中输入Token（通过飞书表格链接获取并以环境变量方式配置）。
        *   “新增行的一个表格内容”来源于代码执行节点的输出（数组字符串）。
        *   设置“增加行数”为“1”，实现逐行增加。
    *   &lt;strong&gt;直接回复节点：&lt;/strong&gt; 打印迭代节点和模型节点的输出内容，在对话框中显示处理结果。
3.  &lt;strong&gt;执行流程：&lt;/strong&gt;
    *   点击DEFI工作流的“预览”，选择从本地上传发票文件（可多选）。
    *   在对话框中输入任意字符串并回车，启动工作流。
    *   观察对话框中显示的发票信息，并检查飞书表格中是否已自动填入相关内容。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;金句：&lt;/strong&gt;
*   “财务人员手动在录入的时候呢，常常会成为整个流程的一个瓶颈。”
*   “量大的时候呢，就会成为一个无底洞。”
*   “数十张发票可以同时的进行识别，只需要短短的数十秒几分钟就可以完成食品和录入。”&lt;/p&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1xuNEzoEEf</guid>
      <pubDate>Wed, 18 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>DIAA浏览器开箱评测：AI原生体验与效能革新</title>
      <link>https://www.bilibili.com/video/BV1kfMUz1Eip</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1kfMUz1Eip"&gt;【开箱】AI 浏览器 Dia 全新公测，对比 Arc 体验到底怎么样？65 分&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本次内容是对DIAA浏览器的一次深度开箱评测，该浏览器被重新设计以在AI时代更好地浏览网页并与内容交互。
文章详细探讨了DIAA如何将AI深度集成至浏览器核心，而非简单作为插件，并将其与传统浏览器如Chrome和Arc进行了对比，展示了其在提升用户效率和个性化体验方面的潜力。&lt;/p&gt;

&lt;h3&gt;重要概念：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AI原生浏览器&lt;/strong&gt;: 这是一个区别于传统“AI+浏览器”或“AI+对话”的新概念，DIAA旨在实现“AI=浏览器”，即让AI成为用户与互联网内容交互的主界面。它不再是将AI作为外挂工具，而是将AI能力原生融入浏览器内核，提供对话式的交互方式，从而革新了传统的内容消费和生产模式。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点：&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;现有浏览器创新功能的用户留存率低&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Ark浏览器的一些创新功能（如侧边栏功能、悬停日历预览）用户使用率极低，公司内部数据显示侧边栏功能使用率仅为4.17%，悬停日历预览更是低至0.4%。这促使开发者重新思考并构建全新的AI原生浏览器DIAA。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI与浏览器交互的核心转变：AI即浏览器&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;DIAA的核心理念是让AI深度融入浏览器本身，成为用户与互联网内容交互的主界面。用户可以直接与网页内容、文件进行对话，进行总结、写作、规划、翻译、购物等操作，这与传统浏览器加AI插件的模式截然不同。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI原生浏览器有望降低对插件的依赖&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;随着AI原生浏览器的发展，许多原本依赖于插件实现的功能（如内容总结、翻译、信息检索）将由浏览器内置的AI直接完成，大大减少了用户安装额外插件的必要性。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高度个性化的AI交互体验&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;DIAA强调满足用户个性化需求，允许用户在设置中自定义AI回应的语气、写作风格（例如模仿保罗·格雷赫姆的风格）、回答代码问题的方式，甚至可以设定自己的学习身份，从而实现千人千面的AI服务。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DIAA与笔记软件的集成多为间接实现&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;虽然DIAA原生不支持与笔记软件的深度集成，但由于其基于通用浏览器内核，用户可以通过安装兼容的浏览器插件（如RedWise）间接实现与现有笔记工具的联动，进行内容高亮和保存。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;行动建议：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DIAA浏览器基础操作：&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;下载并安装DIAA浏览器，可选择导入原有浏览器数据和扩展（如RedWise）。&lt;/li&gt;
&lt;li&gt;根据个人偏好，在设置中对AI进行个性化配置，包括回应语气、写作风格（如保罗·格雷赫姆风格）、回答代码问题的方式、以及个人学习身份（如AI创业者，关注产品技术实践）。&lt;/li&gt;
&lt;li&gt;在浏览网页时，使用快捷键&lt;code&gt;CMN+E&lt;/code&gt;（Mac用户）或类似快捷键快速唤出AI对话窗口，与当前网页内容进行对话，实现总结、写作、规划、翻译等功能。&lt;/li&gt;
&lt;li&gt;利用“Deep Search”功能进行跨平台信息搜索，例如总结YouTube或Bilibili视频。&lt;/li&gt;
&lt;li&gt;尝试使用DIAA的截图和语音输入功能与AI进行交互。&lt;/li&gt;
&lt;li&gt;可拖动或折叠侧边栏，利用右键菜单的“Chat with selection”功能对选中的文本进行翻译或更深入的对话。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BBGPT 618特惠活动：&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;抓住最后机会购买BBGPT永久会员，享受五折优惠，无额外套路。&lt;/li&gt;
&lt;li&gt;已购买年费会员的用户可补差价升级至永久会员。&lt;/li&gt;
&lt;li&gt;请注意，618活动结束后，永久会员资格将不再提供。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;金句：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“快乐不是成功的奖赏，而是成功的燃料。”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1kfMUz1Eip</guid>
      <pubDate>Sat, 14 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>AI赋能浏览器：DIA浏览器深度开箱体验与功能痛点分析</title>
      <link>https://www.bilibili.com/video/BV1kfMUz1Eip</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1kfMUz1Eip"&gt;【开箱】AI 浏览器 Dia 全新公测，对比 Arc 体验到底怎么样？65 分&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;该视频深度评测了DIA浏览器，这是一款旨在将AI深度集成到浏览器本身，以重塑用户与互联网交互方式的新型产品。视频展示了DIA在内容交互、个性化设置和隐私保护方面的特点，并将其与传统浏览器及前身Arc进行对比，同时指出了其目前存在的痛点和不足。&lt;/p&gt;

&lt;h3&gt;重要的概念&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AI = 浏览器&lt;/strong&gt;：该概念强调AI不再是浏览器的外挂工具，而是成为用户与互联网交互的主界面。文章通过将Chrome（AI+浏览器）和ChatGPT（AI+对话）与DIA（AI=浏览器）进行对比来阐述此理念，意指AI原生且深层地融合在浏览器核心体验中。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;AI深度集成，重塑交互方式&lt;/strong&gt;：DIA浏览器旨在将AI深度集成到浏览器本身，而非仅作为外挂工具，通过对话式交互重塑用户与内容的互动，强调“AI等于浏览器”的核心理念。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支撑&lt;/strong&gt;：文本中明确指出“Dier更多就是AI等于浏览器它让AI成为我们和互联网交互的主界面”，并与Chrome的“AI加浏览器”和ChatGPT的“AI加对话”进行区分。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;强调个性化与隐私保护&lt;/strong&gt;：DIA致力于满足用户的个性化需求，并默认提供强大的隐私保护功能，如屏蔽广告、追踪器和cookie banner，以适应AI时代的定制化趋势。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支撑&lt;/strong&gt;：“在AI时代我们都是非常个性化的需求被满足了所以DIAA也就是可以用于每个人的不同角度”，并且“它的隐私保护默认这段下就是屏蔽广告屏蔽追踪器屏蔽这个booking banner”。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持多模态AI交互&lt;/strong&gt;：DIA的AI交互能力涵盖多模态内容，包括YouTube视频总结、图片对话、写作、规划、翻译和购物等，旨在实现与内容的全面交互。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;案例&lt;/strong&gt;：可直接“at 某个type或者是多个type然后进行对话”，对YouTube视频进行内容提取（如做菜步骤），与图片进行对话，结合写作产品（如写邮件、博客），用于规划（如挑选Airbnb房间），或辅助购物（如评估衣服评价）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;与插件生态联动不足&lt;/strong&gt;：作者指出，DIA浏览器目前与现有浏览器插件的联动性较差，这限制了其拥抱生态的能力，并意味着它需要自行开发大量现有插件已具备的功能。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支撑&lt;/strong&gt;：“它跟浏览器插件的联动还是比较差的如果它想拥抱生态它就应该把插的功能也跟浏览器插件能够联动起来不难的话你就需要去实现所有轮件插件也有的一些功能”。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;产品成熟度有待提升&lt;/strong&gt;：作者认为DIA目前的成熟度不高，体验得分在65-70分之间，尚未达到Arc浏览器最初带来的惊艳感，且部分基础功能（如Space切换上下文）仍有缺失。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支撑&lt;/strong&gt;：“我觉得一到一百分可能就打个70分甚至65分它没有像我使用Arc软器大家能使那么惊艳”。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;行动建议或操作指南&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;设置个性化AI回复偏好&lt;/strong&gt;：在注册或首次使用时，可向DIA的AI说明自己的身份（如AI创业者、法学生）和学习偏好，或指定AI回应的语气和写作风格（如“保罗格雷赫姆的风格”），以获得更精准的个性化服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;利用快捷键与AI交互&lt;/strong&gt;：使用CMN+E（在Mac上）快速唤出AI对话窗口，实现类似后台任务的功能，可以在不同Tab间切换的同时让AI处理当前页面的总结或分析任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;直接与页面内容进行对话&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;在地址栏直接输入Chat消息进行搜索或指令。&lt;/li&gt;
&lt;li&gt;高亮不理解的文本，然后右键选择“ask about it”进行提问。&lt;/li&gt;
&lt;li&gt;使用“Chat with”功能，对选中的文本进行翻译或进一步对话。&lt;/li&gt;
&lt;li&gt;利用截图功能让AI识别图片内容并进行对话。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;授权历史数据&lt;/strong&gt;：允许DIA访问你的浏览历史，以便AI能更深入地了解你的兴趣和偏好，从而提供更精准的回复和推荐。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“快乐不是成功的奖赏而是成功的燃料”&lt;/li&gt;
&lt;li&gt;“我们应该探索那些有前景的方向但是不要去过度规划让好奇心来带着你成长来大胆尝试始终为未来保留更多的可能性顺风而行”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1kfMUz1Eip</guid>
      <pubDate>Sat, 14 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>AI原生浏览器DIAA深度开箱：AI时代网页浏览与内容交互新体验</title>
      <link>https://www.bilibili.com/video/BV1kfMUz1Eip</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1kfMUz1Eip"&gt;【开箱】AI 浏览器 Dia 全新公测，对比 Arc 体验到底怎么样？65 分&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本文深度开箱测评了DIAA浏览器，这是一款由ARK浏览器团队推出的全新产品，旨在将AI深度集成到浏览器本身，重塑用户与网页内容的交互方式。作者详细介绍了DIAA在内容总结、写作、翻译、个性化设置等方面的AI功能，并分享了其使用体验，包括亮点与待改进之处。&lt;/p&gt;

&lt;h3&gt;核心概念&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DIAA浏览器&lt;/strong&gt;: 由Browser Company开发的创新型网页浏览器，将AI作为核心交互界面，而非仅仅作为附加工具，致力于实现“AI=浏览器”的理念。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI = 浏览器&lt;/strong&gt;: DIAA提出的核心理念，意味着AI不再是浏览器的一个功能或插件，而是成为用户与互联网交互的主界面，所有浏览、交互、内容处理都通过AI进行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;个性化需求满足&lt;/strong&gt;: 在AI时代，DIAA强调满足用户千人千面的个性化需求，通过AI根据用户的喜好、偏好和身份定制化内容呈现与交互体验。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AI深度集成而非外挂工具&lt;/strong&gt;: DIAA将AI深度集成到浏览器本身，旨在让AI成为用户与互联网交互的主界面，这与Chrome等传统浏览器的“AI+浏览器”模式截然不同。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支持&lt;/strong&gt;: DIAA的产品理念是“AI=浏览器”，让AI成为用户与互联网交互的主界面，提供对话式交互体验。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;原生思维构建浏览器&lt;/strong&gt;: DIAA通过全新的原生思维方式重新构建浏览器，而非在现有产品（如ARK）上简单叠加AI功能。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支持&lt;/strong&gt;: ARK团队发现其原有AI功能（如Max功能）使用率较低且不够“native”，因此决定重新开发一个全新团队和产品DIAA，以实现更原生的AI体验。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注重个性化满足&lt;/strong&gt;: DIAA旨在满足用户高度个性化的需求，通过AI根据用户喜好和偏好提供定制化的交互体验。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支持&lt;/strong&gt;: DIAA允许用户设置AI回复的语气、写作风格（如保罗·格雷厄姆风格）、个人学习或职业身份（如AI创业者、法学生）等个性化偏好，以期获得更精准的AI响应。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;隐私保护默认开启&lt;/strong&gt;: DIAA默认屏蔽广告、追踪器和Cookie横幅，强调隐私保护。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支持&lt;/strong&gt;: 用户在下载后，DIAA默认勾选了屏蔽第三方广告和追踪器。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;当前成熟度不足，插件联动和功能待加强&lt;/strong&gt;: 作者认为DIAA目前的成熟度仍有待提高，尤其在与现有浏览器插件的联动方面表现不佳，且缺乏一些传统浏览器的高效功能。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;支持&lt;/strong&gt;: DIAA无法直接支持多数浏览器插件的功能（如高亮摘要），也缺乏HTML运行沙盒功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持&lt;/strong&gt;: 相较于ARK浏览器中作者喜爱的Space（工作区）功能（如Ctrl+1/2快速切换上下文），DIAA目前缺失类似高效的Tab管理功能。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;操作指南&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;下载与安装&lt;/strong&gt;: 直接下载DIAA浏览器，并可选择从ARK浏览器导入书签和扩展（如ReadWise）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设置个性化偏好&lt;/strong&gt;: 根据个人喜好设置AI回复的语气、写作风格（如“保罗·格雷厄姆的风格”或“Semi-Otteman的风格”），以及个人身份（如“AI创业者”），以优化AI交互体验。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用AI对话&lt;/strong&gt;: 在DIAA浏览器中，可通过快捷键&lt;code&gt;CMN+E&lt;/code&gt;（Mac）唤出AI对话框，与当前网页内容进行交互、提问、总结或翻译。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;利用AI功能&lt;/strong&gt;: 探索DIAA的AI功能，包括视频总结（如YouTube、B站）、邮件撰写、博客写作、内容规划、商品评价分析、语音输入等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨平台搜索&lt;/strong&gt;: 利用AI进行跨平台搜索，批量整理信息源，提高调研效率。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“快乐不是成功的奖赏，而是成功的燃料。”&lt;/li&gt;
&lt;li&gt;“探索那些有前景的方向，但是不要去过度规划，让好奇心来带着你成长，来大胆尝试，始终为未来保留更多的可能性，顺风而行。”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1kfMUz1Eip</guid>
      <pubDate>Sat, 14 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>在Docker环境中使用NVIDIA_GPU资源：NVIDIA_Container_Toolkit实战指南</title>
      <link>https://www.bilibili.com/video/BV1dxM2z8EMD</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1dxM2z8EMD"&gt;04-容器中使用GPU剖析及实践&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;本文详细介绍了如何在Docker或ContainerD等容器环境中高效利用NVIDIA GPU资源，核心是借助NVIDIA Container Toolkit实现GPU设备的容器挂载与直通访问。文章阐述了该工具的工作原理、包含的组件，并提供了在容器中配置和使用GPU的完整操作指南。&lt;/p&gt;

&lt;h3&gt;重要的概念&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NVIDIA Container Toolkit&lt;/strong&gt;：由英伟达公司开源并维护的工具，其核心能力是将英伟达GPU设备挂载到容器中，使容器内应用能够直接使用GPU资源。它具备GPU设备发现与挂载、驱动库自动加载、一致性与跨平台支持、以及钩子机制与运行时桥接等功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RunC Prestart Hook&lt;/strong&gt;：NVIDIA Container Toolkit利用RunC的Prestart Hook机制，在容器启动时将GPU设备插入到容器配置中，实现GPU资源的注入。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NVIDIA Container Runtime&lt;/strong&gt;：NVIDIA Container Toolkit的组件之一，它对原有容器运行时进行包装，拦截容器创建命令并注入GPU配置，是实现GPU资源挂载的关键桥梁。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;在容器环境中使用GPU资源时，CUDA Toolkit通常运行在容器内部，而CUDA Driver则安装在宿主机上，这是与传统方式最大的区别。&lt;/li&gt;
&lt;li&gt;宿主机在容器场景下，仅需安装英伟达驱动和NVIDIA Container Toolkit，无需完整安装CUDA Toolkit即可让容器使用GPU。&lt;/li&gt;
&lt;li&gt;容器镜像版本的选择至关重要，它需要与宿主机的CUDA驱动和CUDA Toolkit版本保持兼容性。若兼容，容器内无需再安装CUDA Toolkit，可直接使用宿主机的驱动和CUDA Toolkit。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;操作指南&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;一、宿主机环境准备：&lt;/strong&gt;
1.  &lt;strong&gt;确认GPU驱动和CUDA Toolkit安装&lt;/strong&gt;：
    *   通过&lt;code&gt;nvidia-smi&lt;/code&gt;确认驱动安装及GPU信息。
    *   可通过&lt;code&gt;nvcc -V&lt;/code&gt;确认CUDA Toolkit安装（宿主机CUDA Toolkit并非必须，但此处示例已安装）。
2.  &lt;strong&gt;安装ContainerD&lt;/strong&gt;：
    *   生成并调整ContainerD配置文件，开启Cgroup的&lt;code&gt;SystemdCgroup&lt;/code&gt;方式，并配置&lt;code&gt;DockerHub&lt;/code&gt;镜像下载地址。
    *   重启ContainerD进程。
3.  &lt;strong&gt;安装Nerdctl&lt;/strong&gt;：下载&lt;code&gt;Nerdctl&lt;/code&gt;并拷贝到对应路径，作为ContainerD的终端操作工具。
4.  &lt;strong&gt;配置DockerHub镜像加速器&lt;/strong&gt;：向指定目录写入配置信息，然后重启ContainerD。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二、NVIDIA Container Toolkit安装与配置：&lt;/strong&gt;
1.  &lt;strong&gt;安装NVIDIA Container Toolkit&lt;/strong&gt;：
    *   配置下载源。
    *   更新系统包列表。
    *   执行安装命令：&lt;code&gt;sudo apt-get install -y nvidia-container-toolkit&lt;/code&gt;。
2.  &lt;strong&gt;配置ContainerD Runtime&lt;/strong&gt;：
    *   使用&lt;code&gt;NVIDIA CTK&lt;/code&gt;工具自动调整ContainerD配置文件，增加&lt;code&gt;NVIDIA runtime&lt;/code&gt;的相关信息。
    *   重启ContainerD进程，确认配置文件中已存在&lt;code&gt;NVIDIA runtime&lt;/code&gt;配置。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;三、启动容器并测试GPU使用：&lt;/strong&gt;
1.  &lt;strong&gt;选择基础镜像&lt;/strong&gt;：
    *   &lt;strong&gt;Runtime类型镜像&lt;/strong&gt;：适用于只运行GPU应用，无需编译源码的场景（包含CUDA共享库）。
    *   &lt;strong&gt;Dev类型镜像&lt;/strong&gt;：适用于需要在容器内编译CUDA应用或使用NCCL等开发接口的场景（包含NVCC编译器、头文件、静态库等）。
2.  &lt;strong&gt;启动容器&lt;/strong&gt;：
    *   使用&lt;code&gt;nerdctl run -it --rm --gpus all &amp;lt;cuda_runtime_image&amp;gt; nvidia-smi&lt;/code&gt;命令启动容器，其中&lt;code&gt;--gpus all&lt;/code&gt;参数指示容器使用节点上所有GPU卡。
    *   观察容器内部执行&lt;code&gt;nvidia-smi&lt;/code&gt;命令的输出，若能显示显卡信息，则表示容器已成功直通并可调用显卡资源。&lt;/p&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;"Docker的话或者说容器它是我们当前应用主要的一种承载的方式很多GPU的使用GPU的应用都会以容器的方式进行运行所以这种方式呢在当前呢也是一个比较主流的。"&lt;/li&gt;
&lt;li&gt;"它主要的一个能力呢是将英伟达的GPU的设备去挂载到容器当中从而呢能够被容器当中的应用去使用GPU的资源。"&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV1dxM2z8EMD</guid>
      <pubDate>Sat, 14 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>WebCoding来了：AI编程工具如何实现从代码生成到一键部署的飞跃</title>
      <link>https://www.bilibili.com/video/BV15mMVzTEor</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV15mMVzTEor"&gt;AI编程 Vibe Coding的原理是什么？&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;文章深入探讨了AI编程工具的运作机制，从最初的AI Agent如何让大语言模型（LLM）间接操作本地文件，到借助IDE上下文信息提升编程效率，最终实现零基础的自动部署。&lt;/p&gt;

&lt;h3&gt;重要的概念&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WebCoding&lt;/strong&gt;: 一种新的编程体验，描述了AI如何实现从零基础写代码到零基础运维上线的全自动化、一气呵成的开发部署流程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI Agent&lt;/strong&gt;: 一个运行在本地的小程序，充当大语言模型和本地文件系统之间的中间层。它预设了读写文件、执行命令等函数，使LLM能够间接执行本地操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MCP (Meta-Capability Platform)&lt;/strong&gt;: 被比作编程机器人的插件系统，允许AI编程机器人安装新的技能包，使其能够操作云服务器、部署网站、配置数据库等，扩展了AI Agent在云服务层面的操作能力。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;主要观点&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;大语言模型本身无法直接读写本地文件或执行命令，需通过一个本地运行的“AI Agent”作为中间层来实现间接操作。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逻辑支撑&lt;/strong&gt;: LLM本质是聊天机器人，只能回复消息。AI Agent通过封装如&lt;code&gt;readfile&lt;/code&gt;、&lt;code&gt;writefile&lt;/code&gt;等函数，将LLM的指令转换为实际的文件操作。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;绝大多数AI编程工具不直接生成完整的修改后代码，而是返回“DIFF”格式的修改内容。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逻辑支撑&lt;/strong&gt;: 直接生成完整代码效率低、消耗大量Token，且容易在未修改部分引入bug，尤其对于长文件。DIFF格式历史悠久、算法成熟，且LLM在训练时已大量接触此类数据，生成可靠性更高。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;为了提升AI编程的准确性和流畅性，现代AI编程工具会主动收集IDE（集成开发环境）中的大量上下文信息，并将其发送给LLM。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;细节支撑&lt;/strong&gt;: 这些信息包括项目文件结构、当前查看的文件名、已打开的文件、命令行输出，甚至当前时间，使AI能更好地理解用户意图和当前环境，减少明显错误。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;实现从编码到部署的“零基础”全流程自动化，需要AI编程机器人支持MCP，通常由云平台提供。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逻辑支撑&lt;/strong&gt;: MCP允许AI Agent获得操作云服务器、部署网站、配置数据库等新技能，从而完成传统编程工具无法处理的后端和运维任务。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;AI生成适配特定云服务的代码时，需要明确的引导，尤其对于AI模型训练后才发布的新服务。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逻辑支撑&lt;/strong&gt;: 云平台通常提供包含预导入库、配置文件和关键提示词的工程模板，这些提示词会与用户需求一同发送给AI，确保生成的代码能正确调用云服务API。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;行动建议或操作指南&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;要实现使用AI进行完整的开发与部署：
&lt;ol&gt;
&lt;li&gt;从云服务的工程模板开始，这些模板预置了访问云服务的库、必要的配置文件以及给AI编程机器人的提示词。&lt;/li&gt;
&lt;li&gt;向编程机器人输入开发需求（例如：“帮我写一个个人网站”）。&lt;/li&gt;
&lt;li&gt;编程机器人会自动收集IDE中的各种信息（文件读写接口、报错、打开的文件、命令行内容等），并结合工程模板的提示词、用户需求和环境信息一起发送给AI模型。&lt;/li&gt;
&lt;li&gt;AI模型根据这些信息生成符合云服务API的代码（以DIFF格式返回）。&lt;/li&gt;
&lt;li&gt;编程机器人验证并应用这些修改，反复迭代直到网站能在本地运行。&lt;/li&gt;
&lt;li&gt;指示编程机器人上线已完成的网站。由于MCP已配置，编程机器人将引导AI模型调用MCP服务，完成部署、建库、配置域名等上线工作。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;金句&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“如果说程序是人意志的延伸那么今天的AI编程不是让人退出这个过程而是把人送回他真正的起点回到那个有想法愿意创造的自己”&lt;/li&gt;
&lt;/ul&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV15mMVzTEor</guid>
      <pubDate>Thu, 12 Jun 2025 12:00:00 +0800</pubDate>
    </item>
    <item>
      <title>深入解析WebCoding：AI如何实现自动编程、部署与程序员的未来</title>
      <link>https://www.bilibili.com/video/BV15mMVzTEor</link>
      <description>&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV15mMVzTEor"&gt;AI编程 Vibe Coding的原理是什么？&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;AI摘要&lt;/h2&gt;

&lt;p&gt;文章详细阐述了AI编程工具的演进过程，从早期简单的聊天模型发展到能够自动生成、修改乃至部署代码的复杂AI Agent系统。文中深入探讨了AI实现自动化编程的关键技术，包括DIFF格式的应用、IDE上下文信息的集成以及用于云服务操作的MCP系统。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;重要概念与解释：&lt;/strong&gt;
*   &lt;strong&gt;AI Agent:&lt;/strong&gt; 运行在本地的小程序，充当大语言模型与本地代码之间的中间层。它通过预设函数（如readfile, writefile）间接操作文件，从而让AI实现代码读写。
    *   &lt;strong&gt;案例:&lt;/strong&gt; VSCode中的AI编程插件即是AI Agent的体现，它们通过接口实现读写代码、浏览网页及执行终端命令等功能。
*   &lt;strong&gt;DIFF格式 (Difference Format):&lt;/strong&gt; 一种描述文件修改内容的古老且成熟的格式，精确指出文件哪些行被替换成新内容。AI工具通过生成DIFF格式的修改来提高效率并减少bug。
    *   &lt;strong&gt;案例:&lt;/strong&gt; Git和SVN等版本控制工具早已广泛使用DIFF格式。AI模型在训练时也包含了大量DIFF内容，使其能可靠地生成此类修改。
*   &lt;strong&gt;MCP (Meta Programming Control):&lt;/strong&gt; 可理解为编程机器人的插件系统，允许AI编程机器人安装新技能包，从而操作其原本不理解的外部系统，如云服务器、数据库等。
    *   &lt;strong&gt;案例:&lt;/strong&gt; 越来越多的云平台推出MCP server，让编程机器人通过调用MCP函数来完成数据库管理、网页部署、云函数创建等上线操作。
*   &lt;strong&gt;WebCoding:&lt;/strong&gt; 指的是一种自动化、一体化的开发流程，让AI能够从编码到部署一气呵成地完成项目，实现零基础写代码、零基础上线运维的体验。
    *   &lt;strong&gt;案例:&lt;/strong&gt; 用户只需从云服务工程模板开始，指示编程机器人“帮我写一个个人网站”，AI便会自动收集IDE信息、结合模板提示词生成适配代码，并通过MCP完成部署和配置。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主要观点：&lt;/strong&gt;
1.  AI编程工具通常以DIFF格式而非直接生成完整代码来回复修改内容。这样做效率更高，且能避免因文件过长导致模型难以精确还原未改动部分而引入bug。
    *   &lt;strong&gt;支撑:&lt;/strong&gt; DIFF格式历史悠久且稳定（如Git/SVN），AI模型在训练中已学习大量DIFF内容。AI Agent还会验证DIFF与本地文件的一致性以确保修改准确。
2.  AI编程工具会主动收集IDE中的各种上下文信息（如文件结构、打开的文件、命令行输出等）发送给大模型，以帮助AI更好地理解编程现场。
    *   &lt;strong&gt;支撑:&lt;/strong&gt; 增加上下文信息能显著提高AI修改代码的准确性，减少低级错误，让编程过程更流畅。
3.  AI不仅限于写代码，通过MCP系统，它还能执行部署网站、配置数据库等线上运维任务，从而实现从编码到上线的全流程自动化。
    *   &lt;strong&gt;支撑:&lt;/strong&gt; 云平台提供MCP Server及相应的函数接口，使得AI能间接操作云服务完成部署工作。
4.  尽管AI能力强大，但其生成的代码并非天然通用，必须明确告知AI目标部署平台，因为不同云平台的API接口差异巨大。
    *   &lt;strong&gt;支撑:&lt;/strong&gt; 对于AI模型训练后发布的新云服务，AI无法识别，需要手动提供平台服务信息和调用方式。
5.  为简化平台适配问题，云平台通常会提供工程模板，其中除了预配置的库和文件，还包含给AI编程机器人量身定制的提示词。
    *   &lt;strong&gt;支撑:&lt;/strong&gt; 这些提示词在编程过程中会自动与用户需求一同发送给AI，指导AI生成适配特定云服务的代码，大大降低了开发者的负担。
6.  文章认为程序员并未被AI取代，而是将自身技能打包为提示词，将重复的部署流程教会AI，从而能回归到更有创造力的起点，专注于想法和创造。
    *   &lt;strong&gt;支撑:&lt;/strong&gt; AI编程被视为人类意志的延伸，让人类摆脱繁琐的细节，投入到更高层次的思考和创新中。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;行动建议或操作指南：&lt;/strong&gt;
本文主要聚焦于解释WebCoding的底层原理和实现方式，并未提供直接面向用户的编程或操作指南。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;金句：&lt;/strong&gt;
*   “如果说程序是人意志的延伸，那么今天的AI编程不是让人退出这个过程，而是把人送回他真正的起点，回到那个有想法愿意创造的自己。”&lt;/p&gt;
</description>
      <guid isPermaLink="true">https://www.bilibili.com/video/BV15mMVzTEor</guid>
      <pubDate>Thu, 12 Jun 2025 12:00:00 +0800</pubDate>
    </item>
  </channel>
</rss>
